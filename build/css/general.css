body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

@font-face {
  font-family: 'Bitter-B';
  src: url('../fonts/Bitter-Bold.ttf');
}

@font-face {
  font-family: 'Bitter-R';
  src: url('../fonts/Bitter-Regular.ttf');
}

@font-face {
  font-family: 'HelvetNuel-B';
  src: url('../fonts/HelveticaNeue-Bold.ttf');
}

@font-face {
  font-family: 'HelvetNuel-M';
  src: url('../fonts/HelveticaNeue-Medium.ttf');
}

/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/

* {
  box-sizing: border-box;
}

.wrapper {
  max-width: 960px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 0 auto;
}

a {
  color: #000;
  text-decoration: none;
}

.active {
  color: #ea5a4b;
}

.header-top {
  height: 47px;
  background: url(../img/content-bg.png) repeat-x top left;
}

.header-top .top-social {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.header-top .top-social a {
  margin: 15px 9px;
}

.header-top .top-social a:last-child {
  margin-right: 0px;
}

.header-top .top-social a span {
  display: block;
}

.header-top .top-social .twitter {
  background-image: url(../img/sprite.png);
  background-position: 0px -164px;
  width: 26px;
  height: 15px;
}

.header-top .top-social .facebook {
  background-image: url(../img/sprite.png);
  background-position: -200px -53px;
  width: 8px;
  height: 16px;
}

.header-top .top-social .dribbble {
  background-image: url(../img/sprite.png);
  background-position: -200px -27px;
  width: 16px;
  height: 16px;
}

.header-top .top-social .rss {
  background-image: url(../img/sprite.png);
  background-position: -200px 0px;
  width: 17px;
  height: 17px;
}

.header-menu {
  height: 56px;
  background: url(../img/bg.png) repeat top left;
  position: relative;
  box-shadow: 0 5px 8px rgba(0, 0, 0, 0.75);
}

.header-menu .wrapper {
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -ms-flex-align: center;
  align-items: center;
}

.header-menu .logo {
  padding-top: 2px;
  width: calc(16.666666666666668% - 10px);
}

.header-menu nav {
  width: calc(33.333333333333336% - 10px);
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.header-menu nav ul {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  text-transform: uppercase;
  font-family: 'HelvetNuel-M';
  font-size: 0.75rem;
  font-weight: 600;
  padding-top: 2px;
  letter-spacing: .4px;
  width: calc(33.333333333333336% - 10px);
  margin-left: calc(66.66666666666667% + 5px);
}

.header-menu nav ul li:last-child > a {
  margin-right: 1px;
}

.header-menu nav ul a {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.header-menu nav ul a:hover {
  color: #ea5a4b;
}

.header-bg {
  height: 151px;
  background: url(../img/header-bg.png) no-repeat top center;
  background-size: cover;
}

main {
  background: url(../img/bg.png) repeat;
  border-top: 1px solid rgba(0, 0, 0, 0);
  border-bottom: 8px solid #ea5a4b;
  overflow: visible;
}

main .content {
  background: url(../img/bg.png) repeat;
  margin: -30px 0;
  width: 100%;
  position: relative;
  font-size: 0.875rem;
}

main .content .content-header {
  background: url(../img/content-bg.png) repeat;
  color: #fff;
  font-family: 'Bitter-B';
  padding: 30px 0 38px 37px;
}

main .content .content-header h2 {
  font-size: 1.875rem;
}

main .content .categories {
  font-family: 'Bitter-R';
  padding-left: 26px;
  height: 84px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
}

main .content .categories .sm_menu {
  display: none;
}

main .content .categories ul {
  width: calc(41.66666666666667% - 10px);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

main .content .categories ul a:hover {
  color: #ea5a4b;
}

main .content .categories .active-cat {
  background-color: #ea5a4b;
  color: #fff;
  padding: 10px 10px;
}

main .content .galery {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 26px;
}

main .content .galery .item {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-bottom: 15px;
  width: calc(25% - 10px);
  position: relative;
}

main .content .galery .item .holder {
  position: absolute;
  height: 30px;
  left: 0;
  top: 101px;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  display: none;
  color: #fff;
  font-family: 'Bitter-B';
  padding: 5px 10px;
}

main .content .galery .item:hover .holder {
  display: block;
}

main .content .galery .item img {
  height: 100%;
  width: 100%;
}

.footer-bg {
  background: url(../img/content-bg.png) repeat;
  color: #a5a5a5;
  font-family: 'HelvetNuel-B';
  font-size: 0.875rem;
  padding: 68px 0 45px 0;
}

.footer-bg .name {
  color: #fff;
  text-transform: uppercase;
}

.footer-bg .wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.footer-bg .recent,
.footer-bg .about,
.footer-bg .social {
  width: calc(33.333333333333336% - 10px);
}

.footer-bg .recent p,
.footer-bg .about p,
.footer-bg .social p {
  margin-bottom: 22px;
}

.footer-bg .recent-item,
.footer-bg .about-item,
.footer-bg .social-item {
  padding: 12px 0 20px 0;
  border-bottom: 1px solid #3b3b3b;
}

.footer-bg .recent-item:last-child,
.footer-bg .about-item:last-child,
.footer-bg .social-item:last-child {
  border: none;
}

.footer-bg .recent p + div {
  padding-top: 0;
}

.footer-bg .social {
  display: block;
}

.footer-bg .social a {
  margin: 1px;
}

.footer-bg .social a span {
  display: inline-block;
}

.footer-bg .social .rss {
  background-image: url(../img/sprite.png);
  background-position: -160px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .facebook {
  background-image: url(../img/sprite.png);
  background-position: -120px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .twitter {
  background-image: url(../img/sprite.png);
  background-position: -80px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .email {
  background-image: url(../img/sprite.png);
  background-position: -40px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .tumblr {
  background-image: url(../img/sprite.png);
  background-position: -120px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .path {
  background-image: url(../img/sprite.png);
  background-position: -80px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .vimeo {
  background-image: url(../img/sprite.png);
  background-position: -40px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .zerply {
  background-image: url(../img/sprite.png);
  background-position: -160px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .picasa {
  background-image: url(../img/sprite.png);
  background-position: -120px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .stumble-upon {
  background-image: url(../img/sprite.png);
  background-position: 0px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .skype {
  background-image: url(../img/sprite.png);
  background-position: -160px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .reddit {
  background-image: url(../img/sprite.png);
  background-position: 0px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .evernote {
  background-image: url(../img/sprite.png);
  background-position: -80px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .behance {
  background-image: url(../img/sprite.png);
  background-position: -40px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .dribbble {
  background-image: url(../img/sprite.png);
  background-position: 0px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .digg {
  background-image: url(../img/sprite.png);
  background-position: -80px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .blogger {
  background-image: url(../img/sprite.png);
  background-position: -160px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .flickr {
  background-image: url(../img/sprite.png);
  background-position: -120px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .linkedin {
  background-image: url(../img/sprite.png);
  background-position: -40px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .google {
  background-image: url(../img/sprite.png);
  background-position: 0px -82px;
  width: 30px;
  height: 31px;
}

@media screen and (max-width: 960px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media screen and (max-width: 780px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }

  .header-menu nav {
    width: calc(33.333333333333336% - 10px);
  }

  .header-menu nav ul {
    width: calc(50% - 10px);
  }

  .header-menu nav ul {
    margin-left: calc(50% + 5px);
  }

  main .content .categories ul {
    width: calc(58.333333333333336% - 10px);
  }

  main .content .galery .item {
    width: calc(33.333333333333336% - 10px);
  }

  .footer-bg .recent,
  .footer-bg .about,
  .footer-bg .social {
    width: calc(50% - 10px);
  }
}

@media screen and (max-width: 560px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }

  .header-menu nav {
    width: calc(33.333333333333336% - 10px);
  }

  .header-menu nav ul {
    width: calc(75% - 10px);
  }

  .header-menu nav ul {
    margin-left: calc(25% + 5px);
  }

  main .content .categories ul {
    width: calc(100% - 10px);
  }

  main .content .galery {
    width: calc(100% - 10px);
  }

  main .content .galery .item {
    width: calc(50% - 10px);
  }

  main .content .galery .item {
    -ms-flex-pack: center;
    justify-content: center;
  }

  .footer-bg .recent,
  .footer-bg .about,
  .footer-bg .social {
    width: calc(100% - 10px);
  }
}

@media screen and (max-width: 370px) {
  .header-menu nav {
    position: relative;
    top: 0;
    left: 0;
  }

  .header-menu nav .sm_menu_nav {
    display: block;
    position: absolute;
    top: -17px;
    left: 85%;
    right: 0;
    bottom: 0;
    color: #fff;
    height: 30px;
    width: 30px;
    background-color: #ea5a4b;
  }

  .header-menu nav .sm_menu_nav .burger {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 15px;
    height: 2px;
    background-color: #fff;
    cursor: pointer;
  }

  .header-menu nav .sm_menu_nav .burger:before,
  .header-menu nav .sm_menu_nav .burger:after {
    content: '';
    display: block;
    width: 15px;
    height: 2px;
    background-color: #fff;
    position: absolute;
    transition: .4s;
  }

  .header-menu nav .sm_menu_nav .burger:before {
    top: -4px;
  }

  .header-menu nav .sm_menu_nav .burger:after {
    top: 4px;
  }

  .header-menu nav .sm_menu_nav .burger.open {
    background-color: transparent;
  }

  .header-menu nav .sm_menu_nav .burger.open:before {
    top: 0;
    transform: rotateZ(45deg);
  }

  .header-menu nav .sm_menu_nav .burger.open:after {
    top: 0;
    transform: rotateZ(-45deg);
  }

  .header-menu nav ul {
    position: absolute;
    top: 15px;
    left: 0;
    right: 0;
    bottom: 0;
    display: none;
    -ms-flex-direction: column;
    flex-direction: column;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: distribute;
    justify-content: space-around;
    height: 100px;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 30px;
    border: 1px solid #ea5a4b;
  }

  main .content .categories {
    position: relative;
    height: 2rem;
  }

  main .content .categories .sm_menu {
    display: block;
    margin: 3px 0;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    color: #fff;
    padding: 5px 10px;
    background-color: #ea5a4b;
  }

  main .content .categories .sm_menu .burger {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 10px;
    height: 2px;
    background-color: #fff;
    cursor: pointer;
  }

  main .content .categories .sm_menu .burger:before,
  main .content .categories .sm_menu .burger:after {
    content: '';
    display: block;
    width: 10px;
    height: 2px;
    background-color: #fff;
    position: absolute;
    transition: .4s;
  }

  main .content .categories .sm_menu .burger:before {
    top: -3px;
  }

  main .content .categories .sm_menu .burger:after {
    top: 3px;
  }

  main .content .categories .sm_menu .burger.open {
    background-color: transparent;
  }

  main .content .categories .sm_menu .burger.open:before {
    top: 0;
    transform: rotateZ(45deg);
  }

  main .content .categories .sm_menu .burger.open:after {
    top: 0;
    transform: rotateZ(-45deg);
  }

  main .content .categories ul {
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 2;
    display: none;
    height: 180px;
    width: 100%;
    position: absolute;
    top: 32px;
    left: 0;
    right: 0;
    bottom: 0;
    padding-top: 10px;
  }

  main .content .categories ul li {
    margin: 15px 10px;
    cursor: pointer;
  }

  main .content .categories ul li a {
    color: #fff;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcG9ydC9zbWFydC1ncmlkLmxlc3MiLCIuLi8uLi88aW5wdXQgY3NzIDEyMT4iLCJpbXBvcnQvZm9udHMubGVzcyIsImdlbmVyYWwubGVzcyIsImltcG9ydC9oZWFkZXIubGVzcyIsImltcG9ydC9zcHJpdGUubGVzcyIsImltcG9ydC9jb250ZW50Lmxlc3MiLCJpbXBvcnQvZm9vdGVyLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBQ0ksVUFBQTtFQUNBLFdBQUE7Q0NhUDtBRFhHO0VBQ0ksMEJBQUE7RUFDQSxrQkFBQTtDQ2FQO0FEWEc7OztFQUNJLFVBQUE7Q0NlUDtBRGJHOzs7Ozs7Ozs7RUFDSSxtQkFBQTtFQUNBLG9CQUFBO0NDdUJQO0FEckJHO0VBQ0ksaUJBQUE7Q0N1QlA7QURyQkc7O0VBQ0ksaUJBQUE7Q0N3QlA7QUR0Qkc7Ozs7OztFQUNJLGdCQUFBO0VBQ0Esb0JBQUE7Q0M2QlA7QUQzQkc7RUFDSSx5QkFBQTtDQzZCUDtBRDNCRztFQUNJLDRCQUFBO0NDNkJQO0FEM0JHOzs7RUFDSSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7Q0MrQlA7QUQ3Qkc7RUFDSSxZQUFBO0NDK0JQO0FEN0JHOzs7Ozs7Ozs7Ozs7RUFDSSxlQUFBO0NDMENQO0FDdEZEO0VBQ0Msd0JBQUE7RUFDQSxxQ0FBQTtDRHdGQTtBQ3RGRDtFQUNDLHdCQUFBO0VBQ0Esd0NBQUE7Q0R3RkE7QUN0RkQ7RUFDQyw0QkFBQTtFQUNBLDRDQUFBO0NEd0ZBO0FDdEZEO0VBQ0MsNEJBQUE7RUFDQSw4Q0FBQTtDRHdGQTtBQUNEOzs7Ozs7Ozs7Ozs7RUFZRTtBQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF3QkU7QUFDRjs7Ozs7Ozs7RUFRRTtBRW5KRjtFQUNDLHVCQUFBO0NGcUpBO0FFbEpEO0VIMkNJLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLGVBQUE7Q0MwR0g7QUR4R0c7RUFtcUJKO0lB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QUFBO0VBTkEsa0NBQUE7RUFWQSxZQUFBO0VBSUEsYUFBQTtDSnNXRDtBTS9wQkQ7RUZxVUUseUNBQUE7RUFOQSxtQ0FBQTtFQVZBLFlBQUE7RUFJQSxhQUFBO0NKNFdEO0FNcnFCRDtFRnFVRSx5Q0FBQTtFQU5BLGtDQUFBO0VBVkEsWUFBQTtFQUlBLGFBQUE7Q0prWEQ7QU0zcUJEO0VGcVVFLHlDQUFBO0VBTkEsZ0NBQUE7RUFWQSxZQUFBO0VBSUEsYUFBQTtDSndYRDtBTWpyQkQ7RUZxVUUseUNBQUE7RUFOQSxrQ0FBQTtFQVZBLFlBQUE7RUFJQSxhQUFBO0NKOFhEO0FNdnJCRDtFRnFVRSx5Q0FBQTtFQU5BLDZCQUFBO0VBVkEsWUFBQTtFQUlBLGFBQUE7Q0pvWUQ7QU03ckJEO0VGcVVFLHlDQUFBO0VBTkEsaUNBQUE7RUFWQSxZQUFBO0VBSUEsYUFBQTtDSjBZRDtBTW5zQkQ7RUZxVUUseUNBQUE7RUFOQSwrQkFBQTtFQVZBLFlBQUE7RUFJQSxhQUFBO0NKZ1pEO0FNenNCRDtFRnFVRSx5Q0FBQTtFQU5BLCtCQUFBO0VBVkEsWUFBQTtFQUlBLGFBQUE7Q0pzWkQ7QU0vc0JEO0VGcVVFLHlDQUFBO0VBTkEsK0JBQUE7RUFWQSxZQUFBO0VBSUEsYUFBQTtDSjRaRDtBTXJ0QkQ7RUZxVUUseUNBQUE7RUFOQSxnQ0FBQTtFQVZBLFlBQUE7RUFJQSxhQUFBO0NKa2FEO0FNM3RCRDtFRnFVRSx5Q0FBQTtFQU5BLGtDQUFBO0VBVkEsWUFBQTtFQUlBLGFBQUE7Q0p3YUQ7QU1qdUJEO0VGcVVFLHlDQUFBO0VBTkEsaUNBQUE7RUFWQSxZQUFBO0VBSUEsYUFBQTtDSjhhRDtBTXZ1QkQ7RUZxVUUseUNBQUE7RUFOQSwrQkFBQTtFQVZBLFlBQUE7RUFJQSxhQUFBO0NKb2JEIiwiZmlsZSI6ImdlbmVyYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNvbHVtbnM6IDEyO1xuQG9mZnNldDogMTBweDtcbkBvZmZzZXRfb25lX3NpZGU6IChAb2Zmc2V0IC8gMik7XG5AYXRvbTogOC4zMzMzMzMzMzMzMzMzMzQlO1xuXG5AYnJlYWtfbGc6IDk2MHB4O1xuQGJyZWFrX21kOiA3ODBweDtcbkBicmVha19zbTogNTYwcHg7XG5cbi5yZXNldCgpe1xyXG4gICAgYm9keSxkaXYsZGwsZHQsZGQsdWwsbGksaDEsaDIsaDMsaDQsaDUsaDYscHJlLGNvZGUsZm9ybSxmaWVsZHNldCxpbnB1dCx0ZXh0YXJlYSxwLGJsb2NrcXVvdGUsdGgsdGR7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcbiAgICB0YWJsZXtcclxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgICAgIGJvcmRlci1zcGFjaW5nOiAwO1xyXG4gICAgfVxyXG4gICAgZmllbGRzZXQsaW1nLGFiYnJ7XHJcbiAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgfVxyXG4gICAgYWRkcmVzcyxjYXB0aW9uLGNpdGUsY29kZSxkZm4sZW0sc3Ryb25nLHRoLHZhcntcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIH1cclxuICAgIHVsIGxpe1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBjYXB0aW9uLHRoe1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbiAgICBoMSxoMixoMyxoNCxoNSxoNntcclxuICAgICAgICBmb250LXNpemU6IDEwMCU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIH1cclxuICAgIHN1cHtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XHJcbiAgICB9XHJcbiAgICBzdWJ7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xyXG4gICAgfVxyXG4gICAgaW5wdXQsdGV4dGFyZWEsc2VsZWN0e1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxuICAgICAgICBmb250LXdlaWdodDogaW5oZXJpdDtcclxuICAgIH1cclxuICAgIGxlZ2VuZHtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgIH1cclxuICAgIGFydGljbGUsYXNpZGUsZGV0YWlscyxmaWdjYXB0aW9uLGZpZ3VyZSxmb290ZXIsaGVhZGVyLGhncm91cCxtZW51LG5hdixzZWN0aW9uLG1haW57XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbn1cblxuLndyYXBwZXIoKXtcclxuICAgIG1heC13aWR0aDogOTYwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICB9XHJcbn1cbi5yb3ctZmxleCgpe1xyXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IC01cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNXB4O1xyXG59XG4ucm93LWZsb2F0KCl7XHJcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IC01cHg7XG4gICAgLmNsZWFyZml4KCk7XHJcbn1cbi5jb2woKXtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbn1cbi5jb2wtZmxvYXQoKXtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XG4uY29sLXBhZGRpbmcoKXtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbn1cbi5jb2wtMSgpe1xyXG4gICAgd2lkdGg6IH5cImNhbGMoOC4zMzMzMzMzMzMzMzMzMzQlIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4uY29sLTIoKXtcclxuICAgIHdpZHRoOiB+XCJjYWxjKDE2LjY2NjY2NjY2NjY2NjY2OCUgLSBAe29mZnNldH0pXCI7XHJcbn1cbi5jb2wtMygpe1xyXG4gICAgd2lkdGg6IH5cImNhbGMoMjUlIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4uY29sLTQoKXtcclxuICAgIHdpZHRoOiB+XCJjYWxjKDMzLjMzMzMzMzMzMzMzMzMzNiUgLSBAe29mZnNldH0pXCI7XHJcbn1cbi5jb2wtNSgpe1xyXG4gICAgd2lkdGg6IH5cImNhbGMoNDEuNjY2NjY2NjY2NjY2NjclIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4uY29sLTYoKXtcclxuICAgIHdpZHRoOiB+XCJjYWxjKDUwJSAtIEB7b2Zmc2V0fSlcIjtcclxufVxuLmNvbC03KCl7XHJcbiAgICB3aWR0aDogflwiY2FsYyg1OC4zMzMzMzMzMzMzMzMzMzYlIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4uY29sLTgoKXtcclxuICAgIHdpZHRoOiB+XCJjYWxjKDY2LjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcclxufVxuLmNvbC05KCl7XHJcbiAgICB3aWR0aDogflwiY2FsYyg3NSUgLSBAe29mZnNldH0pXCI7XHJcbn1cbi5jb2wtMTAoKXtcclxuICAgIHdpZHRoOiB+XCJjYWxjKDgzLjMzMzMzMzMzMzMzMzM0JSAtIEB7b2Zmc2V0fSlcIjtcclxufVxuLmNvbC0xMSgpe1xyXG4gICAgd2lkdGg6IH5cImNhbGMoOTEuNjY2NjY2NjY2NjY2NjclIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4uY29sLTEyKCl7XHJcbiAgICB3aWR0aDogflwiY2FsYygxMDAlIC0gQHtvZmZzZXR9KVwiO1xyXG59XG4ub2Zmc2V0KEBuKXtcclxuICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICBtYXJnaW4tbGVmdDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICBtYXJnaW4tcmlnaHQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XHJcbn1cbi5vZmZzZXQtbGVmdChAbil7XHJcbiAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XHJcbn1cbi5vZmZzZXQtcmlnaHQoQG4pe1xyXG4gICAgQHZhbHVlOiBAYXRvbSAqIEBuO1xuICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcclxufVxuLm9mZnNldC1wYWRkaW5nKEBuKXtcclxuICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICBwYWRkaW5nLWxlZnQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcclxufVxuLm9mZnNldC1sZWZ0LXBhZGRpbmcoQG4pe1xyXG4gICAgQHZhbHVlOiBAYXRvbSAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcclxufVxuLm9mZnNldC1yaWdodC1wYWRkaW5nKEBuKXtcclxuICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xyXG59XG4uanVzdGlmeS1jb250ZW50KEB2YWx1ZSl7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IEB2YWx1ZTtcclxufVxuLmFsaWduLWl0ZW1zKEB2YWx1ZSl7XHJcbiAgICBhbGlnbi1pdGVtczogQHZhbHVlO1xyXG59XG4uYWxpZ24tY29udGVudChAdmFsdWUpe1xyXG4gICAgYWxpZ24tY29udGVudDogQHZhbHVlO1xyXG59XG4uYWxpZ24tc2VsZihAdmFsdWUpe1xyXG4gICAgYWxpZ24tc2VsZjogQHZhbHVlO1xyXG59XG4ub3JkZXIoQHZhbHVlKXtcclxuICAgIG9yZGVyOiBAdmFsdWU7XHJcbn1cbi5mbGV4KEB2YWx1ZSl7XHJcbiAgICBmbGV4OiBAdmFsdWU7XHJcbn1cbi5mbGV4LWdyb3coQHZhbHVlKXtcclxuICAgIGZsZXgtZ3JvdzogQHZhbHVlO1xyXG59XG4uZmxleC1zaHJpbmsoQHZhbHVlKXtcclxuICAgIGZsZXgtc2hyaW5rOiBAdmFsdWU7XHJcbn1cbi5mbGV4LWJhc2lzKEB2YWx1ZSl7XHJcbiAgICBmbGV4LWJhc2lzOiBAdmFsdWU7XHJcbn1cbi5mbGV4LWRpcmVjdGlvbihAdmFsdWUpe1xyXG4gICAgZmxleC1kaXJlY3Rpb246IEB2YWx1ZTtcclxufVxuLmZsZXgtd3JhcChAdmFsdWUpe1xyXG4gICAgZmxleC13cmFwOiBAdmFsdWU7XHJcbn1cbi5mbGV4LWZsb3coQHZhbHVlKXtcclxuICAgIGZsZXgtZmxvdzogQHZhbHVlO1xyXG59XG4uZmxvYXQoQHZhbHVlKXtcclxuICAgIGZsb2F0OiBAdmFsdWU7XHJcbn1cbi5jb2wtbGctMSgpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoOC4zMzMzMzMzMzMzMzMzMzQlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1sZy0yKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICB3aWR0aDogflwiY2FsYygxNi42NjY2NjY2NjY2NjY2NjglIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1sZy0zKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICB3aWR0aDogflwiY2FsYygyNSUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLWxnLTQoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDMzLjMzMzMzMzMzMzMzMzMzNiUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLWxnLTUoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDQxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbGctNigpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoNTAlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1sZy03KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg1OC4zMzMzMzMzMzMzMzMzMzYlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1sZy04KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg2Ni42NjY2NjY2NjY2NjY2NyUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLWxnLTkoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDc1JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbGctMTAoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDgzLjMzMzMzMzMzMzMzMzM0JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbGctMTEoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDkxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbGctMTIoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDEwMCUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4ub2Zmc2V0LWxnKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1sZyhAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1sZyhAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtcGFkZGluZy1sZyhAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1wYWRkaW5nLWxnKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1wYWRkaW5nLWxnKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5qdXN0aWZ5LWNvbnRlbnQtbGcoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWl0ZW1zLWxnKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBhbGlnbi1pdGVtczogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWNvbnRlbnQtbGcoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5hbGlnbi1zZWxmLWxnKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBhbGlnbi1zZWxmOiBAdmFsdWU7XG4gICAgfVxyXG59XG4ub3JkZXItbGcoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIG9yZGVyOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1sZyhAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgZmxleDogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZ3Jvdy1sZyhAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgZmxleC1ncm93OiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1zaHJpbmstbGcoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIGZsZXgtc2hyaW5rOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1iYXNpcy1sZyhAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgZmxleC1iYXNpczogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZGlyZWN0aW9uLWxnKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtd3JhcC1sZyhAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgZmxleC13cmFwOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1mbG93LWxnKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbGcpe1xuICAgICAgICBmbGV4LWZsb3c6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5mbG9hdC1sZyhAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgZmxvYXQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5sZyhAbmFtZSwgQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5jb2wtbWQtMSgpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoOC4zMzMzMzMzMzMzMzMzMzQlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1tZC0yKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICB3aWR0aDogflwiY2FsYygxNi42NjY2NjY2NjY2NjY2NjglIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1tZC0zKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICB3aWR0aDogflwiY2FsYygyNSUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLW1kLTQoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDMzLjMzMzMzMzMzMzMzMzMzNiUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLW1kLTUoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDQxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbWQtNigpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoNTAlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1tZC03KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg1OC4zMzMzMzMzMzMzMzMzMzYlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1tZC04KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg2Ni42NjY2NjY2NjY2NjY2NyUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLW1kLTkoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDc1JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbWQtMTAoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDgzLjMzMzMzMzMzMzMzMzM0JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbWQtMTEoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDkxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtbWQtMTIoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDEwMCUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4ub2Zmc2V0LW1kKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1tZChAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1tZChAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtcGFkZGluZy1tZChAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1wYWRkaW5nLW1kKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1wYWRkaW5nLW1kKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5qdXN0aWZ5LWNvbnRlbnQtbWQoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWl0ZW1zLW1kKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBhbGlnbi1pdGVtczogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWNvbnRlbnQtbWQoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5hbGlnbi1zZWxmLW1kKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBhbGlnbi1zZWxmOiBAdmFsdWU7XG4gICAgfVxyXG59XG4ub3JkZXItbWQoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIG9yZGVyOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1tZChAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgZmxleDogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZ3Jvdy1tZChAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgZmxleC1ncm93OiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1zaHJpbmstbWQoQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIGZsZXgtc2hyaW5rOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1iYXNpcy1tZChAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgZmxleC1iYXNpczogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZGlyZWN0aW9uLW1kKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtd3JhcC1tZChAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgZmxleC13cmFwOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1mbG93LW1kKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBmbGV4LWZsb3c6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5mbG9hdC1tZChAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX21kKXtcbiAgICAgICAgZmxvYXQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5tZChAbmFtZSwgQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5jb2wtc20tMSgpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoOC4zMzMzMzMzMzMzMzMzMzQlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1zbS0yKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICB3aWR0aDogflwiY2FsYygxNi42NjY2NjY2NjY2NjY2NjglIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1zbS0zKCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICB3aWR0aDogflwiY2FsYygyNSUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLXNtLTQoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDMzLjMzMzMzMzMzMzMzMzMzNiUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLXNtLTUoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDQxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtc20tNigpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgd2lkdGg6IH5cImNhbGMoNTAlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1zbS03KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg1OC4zMzMzMzMzMzMzMzMzMzYlIC0gQHtvZmZzZXR9KVwiO1xuICAgIH1cclxufVxuLmNvbC1zbS04KCl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICB3aWR0aDogflwiY2FsYyg2Ni42NjY2NjY2NjY2NjY2NyUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4uY29sLXNtLTkoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDc1JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtc20tMTAoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDgzLjMzMzMzMzMzMzMzMzM0JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtc20tMTEoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDkxLjY2NjY2NjY2NjY2NjY3JSAtIEB7b2Zmc2V0fSlcIjtcbiAgICB9XHJcbn1cbi5jb2wtc20tMTIoKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIHdpZHRoOiB+XCJjYWxjKDEwMCUgLSBAe29mZnNldH0pXCI7XG4gICAgfVxyXG59XG4ub2Zmc2V0LXNtKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx1ZX0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1zbShAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1zbShAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtcGFkZGluZy1zbShAbil7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBAdmFsdWU6IEBhdG9tICogQG47XG4gICAgICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5vZmZzZXQtbGVmdC1wYWRkaW5nLXNtKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiB+XCJjYWxjKEB7dmFsdWV9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIH1cclxufVxuLm9mZnNldC1yaWdodC1wYWRkaW5nLXNtKEBuKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB2YWx1ZTogQGF0b20gKiBAbjtcbiAgICAgICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbHVlfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbiAgICB9XHJcbn1cbi5qdXN0aWZ5LWNvbnRlbnQtc20oQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWl0ZW1zLXNtKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBhbGlnbi1pdGVtczogQHZhbHVlO1xuICAgIH1cclxufVxuLmFsaWduLWNvbnRlbnQtc20oQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5hbGlnbi1zZWxmLXNtKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBhbGlnbi1zZWxmOiBAdmFsdWU7XG4gICAgfVxyXG59XG4ub3JkZXItc20oQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIG9yZGVyOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1zbShAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgZmxleDogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZ3Jvdy1zbShAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgZmxleC1ncm93OiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1zaHJpbmstc20oQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIGZsZXgtc2hyaW5rOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1iYXNpcy1zbShAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgZmxleC1iYXNpczogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtZGlyZWN0aW9uLXNtKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogQHZhbHVlO1xuICAgIH1cclxufVxuLmZsZXgtd3JhcC1zbShAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgZmxleC13cmFwOiBAdmFsdWU7XG4gICAgfVxyXG59XG4uZmxleC1mbG93LXNtKEB2YWx1ZSl7XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBmbGV4LWZsb3c6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5mbG9hdC1zbShAdmFsdWUpe1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgZmxvYXQ6IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5zbShAbmFtZSwgQHZhbHVlKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19zbSl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XHJcbn1cbi5kZWJ1ZyhAYmFja2dyb3VuZCwgQG91dGxpbmUpe1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgXHJcbiAgICA+IGRpdntcclxuICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICAgICAgLndyYXBwZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICA+IGRpdntcclxuICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xyXG4gICAgICAgICAgICAucm93LWZsZXgoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgID4gZGl2e1xyXG4gICAgICAgICAgICAgICAgLmNvbCgpO1xyXG4gICAgICAgICAgICAgICAgLmNvbC0xKCk7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBAb3V0bGluZTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG4uY2xlYXJmaXgoKXtcclxuICAgICY6OmFmdGVye1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICB9XHJcbn1cbiIsImJvZHksXG5kaXYsXG5kbCxcbmR0LFxuZGQsXG51bCxcbmxpLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucHJlLFxuY29kZSxcbmZvcm0sXG5maWVsZHNldCxcbmlucHV0LFxudGV4dGFyZWEsXG5wLFxuYmxvY2txdW90ZSxcbnRoLFxudGQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuZmllbGRzZXQsXG5pbWcsXG5hYmJyIHtcbiAgYm9yZGVyOiAwO1xufVxuYWRkcmVzcyxcbmNhcHRpb24sXG5jaXRlLFxuY29kZSxcbmRmbixcbmVtLFxuc3Ryb25nLFxudGgsXG52YXIge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5jYXB0aW9uLFxudGgge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuc3VwIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xufVxuc3ViIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xufVxuaW5wdXQsXG50ZXh0YXJlYSxcbnNlbGVjdCB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxubGVnZW5kIHtcbiAgY29sb3I6ICMwMDA7XG59XG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQml0dGVyLUInO1xuICBzcmM6IHVybCgnLi4vZm9udHMvQml0dGVyLUJvbGQudHRmJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCaXR0ZXItUic7XG4gIHNyYzogdXJsKCcuLi9mb250cy9CaXR0ZXItUmVndWxhci50dGYnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0hlbHZldE51ZWwtQic7XG4gIHNyYzogdXJsKCcuLi9mb250cy9IZWx2ZXRpY2FOZXVlLUJvbGQudHRmJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdIZWx2ZXROdWVsLU0nO1xuICBzcmM6IHVybCgnLi4vZm9udHMvSGVsdmV0aWNhTmV1ZS1NZWRpdW0udHRmJyk7XG59XG4vKlxuTEVTUyB2YXJpYWJsZXMgYXJlIGluZm9ybWF0aW9uIGFib3V0IGljb24ncyBjb21waWxlZCBzdGF0ZSwgc3RvcmVkIHVuZGVyIGl0cyBvcmlnaW5hbCBmaWxlIG5hbWVcblxuLmljb24taG9tZSB7XG4gIHdpZHRoOiBAaWNvbi1ob21lLXdpZHRoO1xufVxuXG5UaGUgbGFyZ2UgYXJyYXktbGlrZSB2YXJpYWJsZXMgY29udGFpbiBhbGwgaW5mb3JtYXRpb24gYWJvdXQgYSBzaW5nbGUgaWNvblxuQGljb24taG9tZTogeCB5IG9mZnNldF94IG9mZnNldF95IHdpZHRoIGhlaWdodCB0b3RhbF93aWR0aCB0b3RhbF9oZWlnaHQgaW1hZ2VfcGF0aCBuYW1lO1xuXG5BdCB0aGUgYm90dG9tIG9mIHRoaXMgc2VjdGlvbiwgd2UgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQgaXRzZWxmXG5Ac3ByaXRlc2hlZXQ6IHdpZHRoIGhlaWdodCBpbWFnZSBAc3ByaXRlc2hlZXQtc3ByaXRlcztcbiovXG4vKlxuVGhlIHByb3ZpZGVkIGNsYXNzZXMgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aCB0aGUgYXJyYXktbGlrZSB2YXJpYWJsZXNcblxuLmljb24taG9tZSB7XG4gIC5zcHJpdGUtd2lkdGgoQGljb24taG9tZSk7XG59XG4uaWNvbi1lbWFpbCB7XG4gIC5zcHJpdGUoQGljb24tZW1haWwpO1xufVxuXG5FeGFtcGxlIHVzYWdlIGluIEhUTUw6XG5cbmBkaXNwbGF5OiBibG9ja2Agc3ByaXRlOlxuPGRpdiBjbGFzcz1cImljb24taG9tZVwiPjwvZGl2PlxuXG5UbyBjaGFuZ2UgYGRpc3BsYXlgIChlLmcuIGBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCksIHdlIHN1Z2dlc3QgdXNpbmcgYSBjb21tb24gQ1NTIGNsYXNzOlxuXG4vLyBDU1Ncbi5pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vLyBIVE1MXG48aSBjbGFzcz1cImljb24gaWNvbi1ob21lXCI+PC9pPlxuKi9cbi8qXG5UaGUgYC5zcHJpdGVzYCBtaXhpbiBnZW5lcmF0ZXMgaWRlbnRpY2FsIG91dHB1dCB0byB0aGUgQ1NTIHRlbXBsYXRlXG4gIGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbiBpbnNpZGUgb2YgTEVTU1xuXG5UaGlzIG11c3QgYmUgcnVuIHdoZW4geW91IGhhdmUgYXQgbGVhc3QgMiBzcHJpdGVzLlxuICBJZiBydW4gd2l0aCBhIHNpbmdsZSBzcHJpdGUsIHRoZW4gdGhlcmUgd2lsbCBiZSByZWZlcmVuY2UgZXJyb3JzLlxuXG4uc3ByaXRlcyhAc3ByaXRlc2hlZXQtc3ByaXRlcyk7XG4qL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4ud3JhcHBlciB7XG4gIG1heC13aWR0aDogOTYwcHg7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NjBweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpIHtcbiAgLndyYXBwZXIge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICB9XG59XG5hIHtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5hY3RpdmUge1xuICBjb2xvcjogI2VhNWE0Yjtcbn1cbi5oZWFkZXItdG9wIHtcbiAgaGVpZ2h0OiA0N3B4O1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2NvbnRlbnQtYmcucG5nKSByZXBlYXQteCB0b3AgbGVmdDtcbn1cbi5oZWFkZXItdG9wIC50b3Atc29jaWFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbi5oZWFkZXItdG9wIC50b3Atc29jaWFsIGEge1xuICBtYXJnaW46IDE1cHggOXB4O1xufVxuLmhlYWRlci10b3AgLnRvcC1zb2NpYWwgYTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwcHg7XG59XG4uaGVhZGVyLXRvcCAudG9wLXNvY2lhbCBhIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5oZWFkZXItdG9wIC50b3Atc29jaWFsIC50d2l0dGVyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IC0xNjRweDtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMTVweDtcbn1cbi5oZWFkZXItdG9wIC50b3Atc29jaWFsIC5mYWNlYm9vayB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0yMDBweCAtNTNweDtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiAxNnB4O1xufVxuLmhlYWRlci10b3AgLnRvcC1zb2NpYWwgLmRyaWJiYmxlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwMHB4IC0yN3B4O1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xufVxuLmhlYWRlci10b3AgLnRvcC1zb2NpYWwgLnJzcyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0yMDBweCAwcHg7XG4gIHdpZHRoOiAxN3B4O1xuICBoZWlnaHQ6IDE3cHg7XG59XG4uaGVhZGVyLW1lbnUge1xuICBoZWlnaHQ6IDU2cHg7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvYmcucG5nKSByZXBlYXQgdG9wIGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNoYWRvdzogMCA1cHggOHB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG59XG4uaGVhZGVyLW1lbnUgLndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyLW1lbnUgLmxvZ28ge1xuICBwYWRkaW5nLXRvcDogMnB4O1xuICB3aWR0aDogY2FsYygxNi42NjY2NjY2NjY2NjY2NjglIC0gMTBweCk7XG59XG4uaGVhZGVyLW1lbnUgbmF2IHtcbiAgd2lkdGg6IGNhbGMoMzMuMzMzMzMzMzMzMzMzMzM2JSAtIDEwcHgpO1xuICBmbGV4LWJhc2lzOiAxMDAlO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzgwcHgpIHtcbiAgLmhlYWRlci1tZW51IG5hdiB7XG4gICAgd2lkdGg6IGNhbGMoMzMuMzMzMzMzMzMzMzMzMzM2JSAtIDEwcHgpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NjBweCkge1xuICAuaGVhZGVyLW1lbnUgbmF2IHtcbiAgICB3aWR0aDogY2FsYygzMy4zMzMzMzMzMzMzMzMzMzYlIC0gMTBweCk7XG4gIH1cbn1cbi5oZWFkZXItbWVudSBuYXYgdWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiAnSGVsdmV0TnVlbC1NJztcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBwYWRkaW5nLXRvcDogMnB4O1xuICBsZXR0ZXItc3BhY2luZzogLjRweDtcbiAgd2lkdGg6IGNhbGMoMzMuMzMzMzMzMzMzMzMzMzM2JSAtIDEwcHgpO1xuICBtYXJnaW4tbGVmdDogY2FsYyg2Ni42NjY2NjY2NjY2NjY2NyUgKyA1cHgpO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzgwcHgpIHtcbiAgLmhlYWRlci1tZW51IG5hdiB1bCB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gMTBweCk7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIC5oZWFkZXItbWVudSBuYXYgdWwge1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDUwJSArIDVweCk7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2MHB4KSB7XG4gIC5oZWFkZXItbWVudSBuYXYgdWwge1xuICAgIHdpZHRoOiBjYWxjKDc1JSAtIDEwcHgpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NjBweCkge1xuICAuaGVhZGVyLW1lbnUgbmF2IHVsIHtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygyNSUgKyA1cHgpO1xuICB9XG59XG4uaGVhZGVyLW1lbnUgbmF2IHVsIGxpOmxhc3QtY2hpbGQgPiBhIHtcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XG59XG4uaGVhZGVyLW1lbnUgbmF2IHVsIGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXNocmluazogMDtcbn1cbi5oZWFkZXItbWVudSBuYXYgdWwgYTpob3ZlciB7XG4gIGNvbG9yOiAjZWE1YTRiO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcwcHgpIHtcbiAgLmhlYWRlci1tZW51IG5hdiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgLnNtX21lbnVfbmF2IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAtMTdweDtcbiAgICBsZWZ0OiA4NSU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogMzBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE1YTRiO1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgLnNtX21lbnVfbmF2IC5idXJnZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiAxNXB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgLnNtX21lbnVfbmF2IC5idXJnZXI6YmVmb3JlLFxuICAuaGVhZGVyLW1lbnUgbmF2IC5zbV9tZW51X25hdiAuYnVyZ2VyOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTVweDtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0cmFuc2l0aW9uOiAuNHM7XG4gIH1cbiAgLmhlYWRlci1tZW51IG5hdiAuc21fbWVudV9uYXYgLmJ1cmdlcjpiZWZvcmUge1xuICAgIHRvcDogLTRweDtcbiAgfVxuICAuaGVhZGVyLW1lbnUgbmF2IC5zbV9tZW51X25hdiAuYnVyZ2VyOmFmdGVyIHtcbiAgICB0b3A6IDRweDtcbiAgfVxuICAuaGVhZGVyLW1lbnUgbmF2IC5zbV9tZW51X25hdiAuYnVyZ2VyLm9wZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgLnNtX21lbnVfbmF2IC5idXJnZXIub3BlbjpiZWZvcmUge1xuICAgIHRvcDogMDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVooNDVkZWcpO1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgLnNtX21lbnVfbmF2IC5idXJnZXIub3BlbjphZnRlciB7XG4gICAgdG9wOiAwO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWigtNDVkZWcpO1xuICB9XG4gIC5oZWFkZXItbWVudSBuYXYgdWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE1cHg7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWE1YTRiO1xuICB9XG59XG4uaGVhZGVyLWJnIHtcbiAgaGVpZ2h0OiAxNTFweDtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9oZWFkZXItYmcucG5nKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cbm1haW4ge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2JnLnBuZykgcmVwZWF0O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyLWJvdHRvbTogOHB4IHNvbGlkICNlYTVhNGI7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxubWFpbiAuY29udGVudCB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvYmcucG5nKSByZXBlYXQ7XG4gIG1hcmdpbjogLTMwcHggMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbm1haW4gLmNvbnRlbnQgLmNvbnRlbnQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9jb250ZW50LWJnLnBuZykgcmVwZWF0O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6ICdCaXR0ZXItQic7XG4gIHBhZGRpbmc6IDMwcHggMCAzOHB4IDM3cHg7XG59XG5tYWluIC5jb250ZW50IC5jb250ZW50LWhlYWRlciBoMiB7XG4gIGZvbnQtc2l6ZTogMS44NzVyZW07XG59XG5tYWluIC5jb250ZW50IC5jYXRlZ29yaWVzIHtcbiAgZm9udC1mYW1pbHk6ICdCaXR0ZXItUic7XG4gIHBhZGRpbmctbGVmdDogMjZweDtcbiAgaGVpZ2h0OiA4NHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxubWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzBweCkge1xuICBtYWluIC5jb250ZW50IC5jYXRlZ29yaWVzIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAycmVtO1xuICB9XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgLnNtX21lbnUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogM3B4IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE1YTRiO1xuICB9XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgLnNtX21lbnUgLmJ1cmdlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSAuYnVyZ2VyOmJlZm9yZSxcbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSAuYnVyZ2VyOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0cmFuc2l0aW9uOiAuNHM7XG4gIH1cbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSAuYnVyZ2VyOmJlZm9yZSB7XG4gICAgdG9wOiAtM3B4O1xuICB9XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgLnNtX21lbnUgLmJ1cmdlcjphZnRlciB7XG4gICAgdG9wOiAzcHg7XG4gIH1cbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSAuYnVyZ2VyLm9wZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgLnNtX21lbnUgLmJ1cmdlci5vcGVuOmJlZm9yZSB7XG4gICAgdG9wOiAwO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWig0NWRlZyk7XG4gIH1cbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyAuc21fbWVudSAuYnVyZ2VyLm9wZW46YWZ0ZXIge1xuICAgIHRvcDogMDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVooLTQ1ZGVnKTtcbiAgfVxufVxubWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyB1bCB7XG4gIHdpZHRoOiBjYWxjKDQxLjY2NjY2NjY2NjY2NjY3JSAtIDEwcHgpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcwcHgpIHtcbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyB1bCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgIHotaW5kZXg6IDI7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDMycHg7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gIH1cbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyB1bCBsaSB7XG4gICAgbWFyZ2luOiAxNXB4IDEwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgdWwgbGkgYSB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIG1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgdWwge1xuICAgIHdpZHRoOiBjYWxjKDU4LjMzMzMzMzMzMzMzMzMzNiUgLSAxMHB4KTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpIHtcbiAgbWFpbiAuY29udGVudCAuY2F0ZWdvcmllcyB1bCB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xuICB9XG59XG5tYWluIC5jb250ZW50IC5jYXRlZ29yaWVzIHVsIGE6aG92ZXIge1xuICBjb2xvcjogI2VhNWE0Yjtcbn1cbm1haW4gLmNvbnRlbnQgLmNhdGVnb3JpZXMgLmFjdGl2ZS1jYXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE1YTRiO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTBweCAxMHB4O1xufVxubWFpbiAuY29udGVudCAuZ2FsZXJ5IHtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDAgMjZweDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2MHB4KSB7XG4gIG1haW4gLmNvbnRlbnQgLmdhbGVyeSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xuICB9XG59XG5tYWluIC5jb250ZW50IC5nYWxlcnkgLml0ZW0ge1xuICBmbGV4LXNocmluazogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgd2lkdGg6IGNhbGMoMjUlIC0gMTBweCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIG1haW4gLmNvbnRlbnQgLmdhbGVyeSAuaXRlbSB7XG4gICAgd2lkdGg6IGNhbGMoMzMuMzMzMzMzMzMzMzMzMzM2JSAtIDEwcHgpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NjBweCkge1xuICBtYWluIC5jb250ZW50IC5nYWxlcnkgLml0ZW0ge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDEwcHgpO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NjBweCkge1xuICBtYWluIC5jb250ZW50IC5nYWxlcnkgLml0ZW0ge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG5tYWluIC5jb250ZW50IC5nYWxlcnkgLml0ZW0gLmhvbGRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAzMHB4O1xuICBsZWZ0OiAwO1xuICB0b3A6IDEwMXB4O1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICBkaXNwbGF5OiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6ICdCaXR0ZXItQic7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xufVxubWFpbiAuY29udGVudCAuZ2FsZXJ5IC5pdGVtOmhvdmVyIC5ob2xkZXIge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbm1haW4gLmNvbnRlbnQgLmdhbGVyeSAuaXRlbSBpbWcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmZvb3Rlci1iZyB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvY29udGVudC1iZy5wbmcpIHJlcGVhdDtcbiAgY29sb3I6ICNhNWE1YTU7XG4gIGZvbnQtZmFtaWx5OiAnSGVsdmV0TnVlbC1CJztcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgcGFkZGluZzogNjhweCAwIDQ1cHggMDtcbn1cbi5mb290ZXItYmcgLm5hbWUge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5mb290ZXItYmcgLndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5mb290ZXItYmcgLnJlY2VudCxcbi5mb290ZXItYmcgLmFib3V0LFxuLmZvb3Rlci1iZyAuc29jaWFsIHtcbiAgd2lkdGg6IGNhbGMoMzMuMzMzMzMzMzMzMzMzMzM2JSAtIDEwcHgpO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzgwcHgpIHtcbiAgLmZvb3Rlci1iZyAucmVjZW50LFxuICAuZm9vdGVyLWJnIC5hYm91dCxcbiAgLmZvb3Rlci1iZyAuc29jaWFsIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpIHtcbiAgLmZvb3Rlci1iZyAucmVjZW50LFxuICAuZm9vdGVyLWJnIC5hYm91dCxcbiAgLmZvb3Rlci1iZyAuc29jaWFsIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMTBweCk7XG4gIH1cbn1cbi5mb290ZXItYmcgLnJlY2VudCBwLFxuLmZvb3Rlci1iZyAuYWJvdXQgcCxcbi5mb290ZXItYmcgLnNvY2lhbCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjJweDtcbn1cbi5mb290ZXItYmcgLnJlY2VudC1pdGVtLFxuLmZvb3Rlci1iZyAuYWJvdXQtaXRlbSxcbi5mb290ZXItYmcgLnNvY2lhbC1pdGVtIHtcbiAgcGFkZGluZzogMTJweCAwIDIwcHggMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzYjNiM2I7XG59XG4uZm9vdGVyLWJnIC5yZWNlbnQtaXRlbTpsYXN0LWNoaWxkLFxuLmZvb3Rlci1iZyAuYWJvdXQtaXRlbTpsYXN0LWNoaWxkLFxuLmZvb3Rlci1iZyAuc29jaWFsLWl0ZW06bGFzdC1jaGlsZCB7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5mb290ZXItYmcgLnJlY2VudCBwICsgZGl2IHtcbiAgcGFkZGluZy10b3A6IDA7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5mb290ZXItYmcgLnNvY2lhbCBhIHtcbiAgbWFyZ2luOiAxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgYSBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmZvb3Rlci1iZyAuc29jaWFsIC5yc3Mge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTYwcHggLTQxcHg7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgLmZhY2Vib29rIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMHB4IDBweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAudHdpdHRlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC0xMjNweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAuZW1haWwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDBweCAtNDFweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAudHVtYmxyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMHB4IC0xMjNweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAucGF0aCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC04MnB4O1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzMXB4O1xufVxuLmZvb3Rlci1iZyAuc29jaWFsIC52aW1lbyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC00MHB4IC0xMjNweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAuemVycGx5IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2MHB4IC0xMjNweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAucGljYXNhIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMHB4IC04MnB4O1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzMXB4O1xufVxuLmZvb3Rlci1iZyAuc29jaWFsIC5zdHVtYmxlLXVwb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggLTEyM3B4O1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzMXB4O1xufVxuLmZvb3Rlci1iZyAuc29jaWFsIC5za3lwZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0xNjBweCAtODJweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAucmVkZGl0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IDBweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAuZXZlcm5vdGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtODBweCAtNDFweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAuYmVoYW5jZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC00MHB4IDBweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbi5mb290ZXItYmcgLnNvY2lhbCAuZHJpYmJibGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggLTQxcHg7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgLmRpZ2cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtODBweCAwcHg7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgLmJsb2dnZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTYwcHggMHB4O1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzMXB4O1xufVxuLmZvb3Rlci1iZyAuc29jaWFsIC5mbGlja3Ige1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Nwcml0ZS5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTIwcHggLTQxcHg7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgLmxpbmtlZGluIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9zcHJpdGUucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQwcHggLTgycHg7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMxcHg7XG59XG4uZm9vdGVyLWJnIC5zb2NpYWwgLmdvb2dsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvc3ByaXRlLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtODJweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzFweDtcbn1cbiIsIi8v0J/RgNC40LzQtdGAXHJcbi8vIFx0QGZvbnQtZmFjZXtcclxuLy8gXHRmb250LWZhbWlseTogJ2x1eCc7XHJcbi8vIFx0c3JjOiB1cmwoJy4uL2ZvbnRzL2x1eC50dGYnKTtcclxuLy8g0L3QtSDQt9Cw0LHRg9C00Ywg0L/QvtC00LrQu9GO0YfQuNGC0Ywg0LIgc2V0aW5ncyDQuCBnZW5lcmFsLmxlc3NcclxuXHJcbkBmb250LWZhY2V7XHJcblx0Zm9udC1mYW1pbHk6ICdCaXR0ZXItQic7XHJcblx0c3JjOiB1cmwoJy4uL2ZvbnRzL0JpdHRlci1Cb2xkLnR0ZicpO1xyXG59XHJcbkBmb250LWZhY2V7XHJcblx0Zm9udC1mYW1pbHk6ICdCaXR0ZXItUic7XHJcblx0c3JjOiB1cmwoJy4uL2ZvbnRzL0JpdHRlci1SZWd1bGFyLnR0ZicpO1xyXG59XHJcbkBmb250LWZhY2V7XHJcblx0Zm9udC1mYW1pbHk6ICdIZWx2ZXROdWVsLUInO1xyXG5cdHNyYzogdXJsKCcuLi9mb250cy9IZWx2ZXRpY2FOZXVlLUJvbGQudHRmJyk7XHJcbn1cclxuQGZvbnQtZmFjZXtcclxuXHRmb250LWZhbWlseTogJ0hlbHZldE51ZWwtTSc7XHJcblx0c3JjOiB1cmwoJy4uL2ZvbnRzL0hlbHZldGljYU5ldWUtTWVkaXVtLnR0ZicpO1xyXG59IiwiLy8gQGltcG9ydCAnaW1wb3J0L3Jlc2V0JztcclxuLnJlc2V0KCk7XHJcbkBpbXBvcnQgJ2ltcG9ydC9zbWFydC1ncmlkJztcclxuQGltcG9ydCAnaW1wb3J0L2ZvbnRzJztcclxuQGltcG9ydCAnaW1wb3J0L19zZXR0aW5nJztcclxuQGltcG9ydCAnaW1wb3J0L19taXhpbnMnO1xyXG5AaW1wb3J0ICdpbXBvcnQvc3ByaXRlJztcclxuXHJcbip7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLndyYXBwZXJ7XHJcblx0LndyYXBwZXIoKTtcclxufVxyXG5cclxuYXtcclxuXHRjb2xvcjogIzAwMDtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5hY3RpdmV7XHJcblx0Y29sb3I6IEBhY3RpdmVDb2xvcjtcclxufVxyXG5cclxuXHJcbkBpbXBvcnQgJ2ltcG9ydC9oZWFkZXInO1xyXG5AaW1wb3J0ICdpbXBvcnQvY29udGVudCc7XHJcbkBpbXBvcnQgJ2ltcG9ydC9mb290ZXInOyIsIi5oZWFkZXItdG9we1xyXG5cdGhlaWdodDogNDdweDtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2NvbnRlbnQtYmcucG5nKSByZXBlYXQteCB0b3AgbGVmdDtcclxuXHRcdC50b3Atc29jaWFse1xyXG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cclxuXHRcdFx0YXtcclxuXHRcdFx0XHRtYXJnaW46IDE1cHggOXB4O1xyXG5cdFx0XHRcdCY6bGFzdC1jaGlsZHtcclxuXHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDBweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0c3BhbntcclxuXHRcdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQudHdpdHRlcntcclxuXHRcdFx0XHQuc3ByaXRlKEB0b3AtdHdpdHRlcik7XHJcblx0XHRcdH1cclxuXHRcdFx0LmZhY2Vib29re1xyXG5cdFx0XHRcdC5zcHJpdGUoQHRvcC1mYWNlYm9vayk7XHJcblx0XHRcdH1cclxuXHRcdFx0LmRyaWJiYmxle1xyXG5cdFx0XHRcdC5zcHJpdGUoQHRvcC1kcmliYmJsZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0LnJzc3tcclxuXHRcdFx0XHQuc3ByaXRlKEB0b3AtcnNzKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG59XHJcblx0LmhlYWRlci1tZW51e1xyXG5cdGhlaWdodDogNTZweDtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2JnLnBuZykgcmVwZWF0IHRvcCBsZWZ0O1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRib3gtc2hhZG93OiAwIDVweCA4cHggcmdiYSgwICwwLCAwLCAuNzUpO1xyXG5cdC53cmFwcGVye1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGhlaWdodDogMTAwJTtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0fVxyXG5cdC5sb2dve1xyXG5cdFx0cGFkZGluZy10b3A6IDJweDtcclxuXHRcdC5jb2wtMigpO1xyXG5cdH1cclxuXHRuYXZ7XHJcblx0XHQuY29sLTQoKTtcclxuXHRcdC5jb2wtbWQtNCgpO1xyXG5cdFx0LmNvbC1zbS00KCk7XHJcblx0XHRmbGV4LWJhc2lzOiAxMDAlO1xyXG5cdFx0dWx7XHJcblx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRcdFx0Zm9udC1mYW1pbHk6IEBtZW55LWZmO1xyXG5cdFx0XHRmb250LXNpemU6IEBtZW51O1xyXG5cdFx0XHRmb250LXdlaWdodDogNjAwO1xyXG5cdFx0XHRwYWRkaW5nLXRvcDogMnB4O1xyXG5cdFx0XHRsZXR0ZXItc3BhY2luZzogLjRweDtcclxuXHRcdFx0LmNvbC00KCk7XHJcblx0XHRcdC5vZmZzZXQtbGVmdCg4KTtcclxuXHRcdFx0LmNvbC1tZC02KCk7XHJcblx0XHRcdC5vZmZzZXQtbGVmdC1tZCg2KTtcclxuXHRcdFx0LmNvbC1zbS05KCk7XHJcblx0XHRcdC5vZmZzZXQtbGVmdC1zbSgzKTtcclxuXHRcdFx0bGl7XHJcblx0XHRcdFx0JjpsYXN0LWNoaWxkPmF7XHJcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDFweDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0YXtcclxuXHRcdFx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0XHRcdGZsZXgtc2hyaW5rOiAwO1xyXG5cdFx0XHRcdCY6aG92ZXJ7XHJcblx0XHRcdFx0XHRjb2xvcjogQGFjdGl2ZUNvbG9yO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcwcHgpIHtcclxuXHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHR0b3A6IDA7XHJcblx0XHRcdGxlZnQ6IDA7XHJcblx0XHRcdC5zbV9tZW51X25hdntcclxuXHRcdFx0XHRkaXNwbGF5OiBibG9jazsgXHJcblx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRcdHRvcDogLTE3cHg7XHJcblx0XHRcdFx0bGVmdDogODUlO1xyXG5cdFx0XHRcdHJpZ2h0OiAwO1xyXG5cdFx0XHRcdGJvdHRvbTogMDtcclxuXHRcdFx0XHRjb2xvcjogI2ZmZjtcclxuXHRcdFx0XHRoZWlnaHQ6IDMwcHg7XHJcblx0XHRcdFx0d2lkdGg6IDMwcHg7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogQGFjdGl2ZUNvbG9yO1xyXG5cdFx0XHRcdC5idXJnZXJ7XHJcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdFx0XHRsZWZ0OiAwO1xyXG5cdFx0XHRcdFx0cmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRib3R0b206IDA7XHJcblx0XHRcdFx0XHRtYXJnaW46IGF1dG87XHJcblx0XHRcdFx0XHR3aWR0aDogMTVweDtcclxuXHRcdFx0XHRcdGhlaWdodDogMnB4O1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHRcdFx0XHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdFx0XHRcdCY6YmVmb3JlLCAmOmFmdGVye1xyXG5cdFx0XHRcdFx0XHRjb250ZW50OiAnJztcclxuXHRcdFx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRcdFx0XHRcdHdpZHRoOiAxNXB4O1xyXG5cdFx0XHRcdFx0XHRoZWlnaHQ6IDJweDtcclxuXHRcdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRcdFx0XHR0cmFuc2l0aW9uOiAuNHM7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRcdFx0dG9wOiAtNHB4O1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0JjphZnRlcntcclxuXHRcdFx0XHRcdFx0dG9wOiA0cHg7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQmLm9wZW57XHJcblx0XHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdFx0XHQmOmJlZm9yZXtcclxuXHRcdFx0XHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdFx0XHRcdFx0dHJhbnNmb3JtOiByb3RhdGVaKDQ1ZGVnKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHQmOmFmdGVye1xyXG5cdFx0XHRcdFx0XHRcdHRvcDogMDtcclxuXHRcdFx0XHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZVooLTQ1ZGVnKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR1bHtcclxuXHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0dG9wOiAxNXB4O1xyXG5cdFx0XHRcdGxlZnQ6IDA7XHJcblx0XHRcdFx0cmlnaHQ6IDA7XHJcblx0XHRcdFx0Ym90dG9tOiAwO1xyXG5cdFx0XHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0XHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRcdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0XHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG5cdFx0XHRcdGhlaWdodDogMTAwcHg7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuNyk7XHJcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogMzBweDtcclxuXHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCBAYWN0aXZlQ29sb3I7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLmhlYWRlci1iZ3tcclxuXHRoZWlnaHQ6IDE1MXB4O1xyXG5cdGJhY2tncm91bmQ6IHVybCguLi9pbWcvaGVhZGVyLWJnLnBuZykgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XHJcblx0YmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG5cclxuXHJcbiIsIi8qXG5MRVNTIHZhcmlhYmxlcyBhcmUgaW5mb3JtYXRpb24gYWJvdXQgaWNvbidzIGNvbXBpbGVkIHN0YXRlLCBzdG9yZWQgdW5kZXIgaXRzIG9yaWdpbmFsIGZpbGUgbmFtZVxuXG4uaWNvbi1ob21lIHtcbiAgd2lkdGg6IEBpY29uLWhvbWUtd2lkdGg7XG59XG5cblRoZSBsYXJnZSBhcnJheS1saWtlIHZhcmlhYmxlcyBjb250YWluIGFsbCBpbmZvcm1hdGlvbiBhYm91dCBhIHNpbmdsZSBpY29uXG5AaWNvbi1ob21lOiB4IHkgb2Zmc2V0X3ggb2Zmc2V0X3kgd2lkdGggaGVpZ2h0IHRvdGFsX3dpZHRoIHRvdGFsX2hlaWdodCBpbWFnZV9wYXRoIG5hbWU7XG5cbkF0IHRoZSBib3R0b20gb2YgdGhpcyBzZWN0aW9uLCB3ZSBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzcHJpdGVzaGVldCBpdHNlbGZcbkBzcHJpdGVzaGVldDogd2lkdGggaGVpZ2h0IGltYWdlIEBzcHJpdGVzaGVldC1zcHJpdGVzO1xuKi9cbkBiZWhhbmNlLW5hbWU6ICdiZWhhbmNlJztcbkBiZWhhbmNlLXg6IDQwcHg7XG5AYmVoYW5jZS15OiAwcHg7XG5AYmVoYW5jZS1vZmZzZXQteDogLTQwcHg7XG5AYmVoYW5jZS1vZmZzZXQteTogMHB4O1xuQGJlaGFuY2Utd2lkdGg6IDMwcHg7XG5AYmVoYW5jZS1oZWlnaHQ6IDMxcHg7XG5AYmVoYW5jZS10b3RhbC13aWR0aDogMjE3cHg7XG5AYmVoYW5jZS10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQGJlaGFuY2UtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AYmVoYW5jZTogNDBweCAwcHggLTQwcHggMHB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdiZWhhbmNlJztcbkBibG9nZ2VyLW5hbWU6ICdibG9nZ2VyJztcbkBibG9nZ2VyLXg6IDE2MHB4O1xuQGJsb2dnZXIteTogMHB4O1xuQGJsb2dnZXItb2Zmc2V0LXg6IC0xNjBweDtcbkBibG9nZ2VyLW9mZnNldC15OiAwcHg7XG5AYmxvZ2dlci13aWR0aDogMzBweDtcbkBibG9nZ2VyLWhlaWdodDogMzFweDtcbkBibG9nZ2VyLXRvdGFsLXdpZHRoOiAyMTdweDtcbkBibG9nZ2VyLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AYmxvZ2dlci1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkBibG9nZ2VyOiAxNjBweCAwcHggLTE2MHB4IDBweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAnYmxvZ2dlcic7XG5AZGlnZy1uYW1lOiAnZGlnZyc7XG5AZGlnZy14OiA4MHB4O1xuQGRpZ2cteTogMHB4O1xuQGRpZ2ctb2Zmc2V0LXg6IC04MHB4O1xuQGRpZ2ctb2Zmc2V0LXk6IDBweDtcbkBkaWdnLXdpZHRoOiAzMHB4O1xuQGRpZ2ctaGVpZ2h0OiAzMXB4O1xuQGRpZ2ctdG90YWwtd2lkdGg6IDIxN3B4O1xuQGRpZ2ctdG90YWwtaGVpZ2h0OiAxNzlweDtcbkBkaWdnLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQGRpZ2c6IDgwcHggMHB4IC04MHB4IDBweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAnZGlnZyc7XG5AZHJpYmJibGUtbmFtZTogJ2RyaWJiYmxlJztcbkBkcmliYmJsZS14OiAwcHg7XG5AZHJpYmJibGUteTogNDFweDtcbkBkcmliYmJsZS1vZmZzZXQteDogMHB4O1xuQGRyaWJiYmxlLW9mZnNldC15OiAtNDFweDtcbkBkcmliYmJsZS13aWR0aDogMzBweDtcbkBkcmliYmJsZS1oZWlnaHQ6IDMxcHg7XG5AZHJpYmJibGUtdG90YWwtd2lkdGg6IDIxN3B4O1xuQGRyaWJiYmxlLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AZHJpYmJibGUtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AZHJpYmJibGU6IDBweCA0MXB4IDBweCAtNDFweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAnZHJpYmJibGUnO1xuQGVtYWlsLW5hbWU6ICdlbWFpbCc7XG5AZW1haWwteDogNDBweDtcbkBlbWFpbC15OiA0MXB4O1xuQGVtYWlsLW9mZnNldC14OiAtNDBweDtcbkBlbWFpbC1vZmZzZXQteTogLTQxcHg7XG5AZW1haWwtd2lkdGg6IDMwcHg7XG5AZW1haWwtaGVpZ2h0OiAzMXB4O1xuQGVtYWlsLXRvdGFsLXdpZHRoOiAyMTdweDtcbkBlbWFpbC10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQGVtYWlsLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQGVtYWlsOiA0MHB4IDQxcHggLTQwcHggLTQxcHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ2VtYWlsJztcbkBldmVybm90ZS1uYW1lOiAnZXZlcm5vdGUnO1xuQGV2ZXJub3RlLXg6IDgwcHg7XG5AZXZlcm5vdGUteTogNDFweDtcbkBldmVybm90ZS1vZmZzZXQteDogLTgwcHg7XG5AZXZlcm5vdGUtb2Zmc2V0LXk6IC00MXB4O1xuQGV2ZXJub3RlLXdpZHRoOiAzMHB4O1xuQGV2ZXJub3RlLWhlaWdodDogMzFweDtcbkBldmVybm90ZS10b3RhbC13aWR0aDogMjE3cHg7XG5AZXZlcm5vdGUtdG90YWwtaGVpZ2h0OiAxNzlweDtcbkBldmVybm90ZS1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkBldmVybm90ZTogODBweCA0MXB4IC04MHB4IC00MXB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdldmVybm90ZSc7XG5AZmFjZWJvb2stbmFtZTogJ2ZhY2Vib29rJztcbkBmYWNlYm9vay14OiAxMjBweDtcbkBmYWNlYm9vay15OiAwcHg7XG5AZmFjZWJvb2stb2Zmc2V0LXg6IC0xMjBweDtcbkBmYWNlYm9vay1vZmZzZXQteTogMHB4O1xuQGZhY2Vib29rLXdpZHRoOiAzMHB4O1xuQGZhY2Vib29rLWhlaWdodDogMzFweDtcbkBmYWNlYm9vay10b3RhbC13aWR0aDogMjE3cHg7XG5AZmFjZWJvb2stdG90YWwtaGVpZ2h0OiAxNzlweDtcbkBmYWNlYm9vay1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkBmYWNlYm9vazogMTIwcHggMHB4IC0xMjBweCAwcHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ2ZhY2Vib29rJztcbkBmbGlja3ItbmFtZTogJ2ZsaWNrcic7XG5AZmxpY2tyLXg6IDEyMHB4O1xuQGZsaWNrci15OiA0MXB4O1xuQGZsaWNrci1vZmZzZXQteDogLTEyMHB4O1xuQGZsaWNrci1vZmZzZXQteTogLTQxcHg7XG5AZmxpY2tyLXdpZHRoOiAzMHB4O1xuQGZsaWNrci1oZWlnaHQ6IDMxcHg7XG5AZmxpY2tyLXRvdGFsLXdpZHRoOiAyMTdweDtcbkBmbGlja3ItdG90YWwtaGVpZ2h0OiAxNzlweDtcbkBmbGlja3ItaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AZmxpY2tyOiAxMjBweCA0MXB4IC0xMjBweCAtNDFweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAnZmxpY2tyJztcbkBnb29nbGUtbmFtZTogJ2dvb2dsZSc7XG5AZ29vZ2xlLXg6IDBweDtcbkBnb29nbGUteTogODJweDtcbkBnb29nbGUtb2Zmc2V0LXg6IDBweDtcbkBnb29nbGUtb2Zmc2V0LXk6IC04MnB4O1xuQGdvb2dsZS13aWR0aDogMzBweDtcbkBnb29nbGUtaGVpZ2h0OiAzMXB4O1xuQGdvb2dsZS10b3RhbC13aWR0aDogMjE3cHg7XG5AZ29vZ2xlLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AZ29vZ2xlLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQGdvb2dsZTogMHB4IDgycHggMHB4IC04MnB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdnb29nbGUnO1xuQGxpbmtlZGluLW5hbWU6ICdsaW5rZWRpbic7XG5AbGlua2VkaW4teDogNDBweDtcbkBsaW5rZWRpbi15OiA4MnB4O1xuQGxpbmtlZGluLW9mZnNldC14OiAtNDBweDtcbkBsaW5rZWRpbi1vZmZzZXQteTogLTgycHg7XG5AbGlua2VkaW4td2lkdGg6IDMwcHg7XG5AbGlua2VkaW4taGVpZ2h0OiAzMXB4O1xuQGxpbmtlZGluLXRvdGFsLXdpZHRoOiAyMTdweDtcbkBsaW5rZWRpbi10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQGxpbmtlZGluLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQGxpbmtlZGluOiA0MHB4IDgycHggLTQwcHggLTgycHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ2xpbmtlZGluJztcbkBwYXRoLW5hbWU6ICdwYXRoJztcbkBwYXRoLXg6IDgwcHg7XG5AcGF0aC15OiA4MnB4O1xuQHBhdGgtb2Zmc2V0LXg6IC04MHB4O1xuQHBhdGgtb2Zmc2V0LXk6IC04MnB4O1xuQHBhdGgtd2lkdGg6IDMwcHg7XG5AcGF0aC1oZWlnaHQ6IDMxcHg7XG5AcGF0aC10b3RhbC13aWR0aDogMjE3cHg7XG5AcGF0aC10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQHBhdGgtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AcGF0aDogODBweCA4MnB4IC04MHB4IC04MnB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdwYXRoJztcbkBwaWNhc2EtbmFtZTogJ3BpY2FzYSc7XG5AcGljYXNhLXg6IDEyMHB4O1xuQHBpY2FzYS15OiA4MnB4O1xuQHBpY2FzYS1vZmZzZXQteDogLTEyMHB4O1xuQHBpY2FzYS1vZmZzZXQteTogLTgycHg7XG5AcGljYXNhLXdpZHRoOiAzMHB4O1xuQHBpY2FzYS1oZWlnaHQ6IDMxcHg7XG5AcGljYXNhLXRvdGFsLXdpZHRoOiAyMTdweDtcbkBwaWNhc2EtdG90YWwtaGVpZ2h0OiAxNzlweDtcbkBwaWNhc2EtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AcGljYXNhOiAxMjBweCA4MnB4IC0xMjBweCAtODJweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAncGljYXNhJztcbkByZWRkaXQtbmFtZTogJ3JlZGRpdCc7XG5AcmVkZGl0LXg6IDBweDtcbkByZWRkaXQteTogMHB4O1xuQHJlZGRpdC1vZmZzZXQteDogMHB4O1xuQHJlZGRpdC1vZmZzZXQteTogMHB4O1xuQHJlZGRpdC13aWR0aDogMzBweDtcbkByZWRkaXQtaGVpZ2h0OiAzMXB4O1xuQHJlZGRpdC10b3RhbC13aWR0aDogMjE3cHg7XG5AcmVkZGl0LXRvdGFsLWhlaWdodDogMTc5cHg7XG5AcmVkZGl0LWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHJlZGRpdDogMHB4IDBweCAwcHggMHB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdyZWRkaXQnO1xuQHJzcy1uYW1lOiAncnNzJztcbkByc3MteDogMTYwcHg7XG5AcnNzLXk6IDQxcHg7XG5AcnNzLW9mZnNldC14OiAtMTYwcHg7XG5AcnNzLW9mZnNldC15OiAtNDFweDtcbkByc3Mtd2lkdGg6IDMwcHg7XG5AcnNzLWhlaWdodDogMzFweDtcbkByc3MtdG90YWwtd2lkdGg6IDIxN3B4O1xuQHJzcy10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQHJzcy1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkByc3M6IDE2MHB4IDQxcHggLTE2MHB4IC00MXB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdyc3MnO1xuQHNreXBlLW5hbWU6ICdza3lwZSc7XG5Ac2t5cGUteDogMTYwcHg7XG5Ac2t5cGUteTogODJweDtcbkBza3lwZS1vZmZzZXQteDogLTE2MHB4O1xuQHNreXBlLW9mZnNldC15OiAtODJweDtcbkBza3lwZS13aWR0aDogMzBweDtcbkBza3lwZS1oZWlnaHQ6IDMxcHg7XG5Ac2t5cGUtdG90YWwtd2lkdGg6IDIxN3B4O1xuQHNreXBlLXRvdGFsLWhlaWdodDogMTc5cHg7XG5Ac2t5cGUtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5Ac2t5cGU6IDE2MHB4IDgycHggLTE2MHB4IC04MnB4IDMwcHggMzFweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICdza3lwZSc7XG5Ac3R1bWJsZS11cG9uLW5hbWU6ICdzdHVtYmxlIHVwb24nO1xuQHN0dW1ibGUtdXBvbi14OiAwcHg7XG5Ac3R1bWJsZS11cG9uLXk6IDEyM3B4O1xuQHN0dW1ibGUtdXBvbi1vZmZzZXQteDogMHB4O1xuQHN0dW1ibGUtdXBvbi1vZmZzZXQteTogLTEyM3B4O1xuQHN0dW1ibGUtdXBvbi13aWR0aDogMzBweDtcbkBzdHVtYmxlLXVwb24taGVpZ2h0OiAzMXB4O1xuQHN0dW1ibGUtdXBvbi10b3RhbC13aWR0aDogMjE3cHg7XG5Ac3R1bWJsZS11cG9uLXRvdGFsLWhlaWdodDogMTc5cHg7XG5Ac3R1bWJsZS11cG9uLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHN0dW1ibGUtdXBvbjogMHB4IDEyM3B4IDBweCAtMTIzcHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ3N0dW1ibGUgdXBvbic7XG5AdG9wLWRyaWJiYmxlLW5hbWU6ICd0b3AtZHJpYmJibGUnO1xuQHRvcC1kcmliYmJsZS14OiAyMDBweDtcbkB0b3AtZHJpYmJibGUteTogMjdweDtcbkB0b3AtZHJpYmJibGUtb2Zmc2V0LXg6IC0yMDBweDtcbkB0b3AtZHJpYmJibGUtb2Zmc2V0LXk6IC0yN3B4O1xuQHRvcC1kcmliYmJsZS13aWR0aDogMTZweDtcbkB0b3AtZHJpYmJibGUtaGVpZ2h0OiAxNnB4O1xuQHRvcC1kcmliYmJsZS10b3RhbC13aWR0aDogMjE3cHg7XG5AdG9wLWRyaWJiYmxlLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AdG9wLWRyaWJiYmxlLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHRvcC1kcmliYmJsZTogMjAwcHggMjdweCAtMjAwcHggLTI3cHggMTZweCAxNnB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ3RvcC1kcmliYmJsZSc7XG5AdG9wLWZhY2Vib29rLW5hbWU6ICd0b3AtZmFjZWJvb2snO1xuQHRvcC1mYWNlYm9vay14OiAyMDBweDtcbkB0b3AtZmFjZWJvb2steTogNTNweDtcbkB0b3AtZmFjZWJvb2stb2Zmc2V0LXg6IC0yMDBweDtcbkB0b3AtZmFjZWJvb2stb2Zmc2V0LXk6IC01M3B4O1xuQHRvcC1mYWNlYm9vay13aWR0aDogOHB4O1xuQHRvcC1mYWNlYm9vay1oZWlnaHQ6IDE2cHg7XG5AdG9wLWZhY2Vib29rLXRvdGFsLXdpZHRoOiAyMTdweDtcbkB0b3AtZmFjZWJvb2stdG90YWwtaGVpZ2h0OiAxNzlweDtcbkB0b3AtZmFjZWJvb2staW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5AdG9wLWZhY2Vib29rOiAyMDBweCA1M3B4IC0yMDBweCAtNTNweCA4cHggMTZweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICd0b3AtZmFjZWJvb2snO1xuQHRvcC1yc3MtbmFtZTogJ3RvcC1yc3MnO1xuQHRvcC1yc3MteDogMjAwcHg7XG5AdG9wLXJzcy15OiAwcHg7XG5AdG9wLXJzcy1vZmZzZXQteDogLTIwMHB4O1xuQHRvcC1yc3Mtb2Zmc2V0LXk6IDBweDtcbkB0b3AtcnNzLXdpZHRoOiAxN3B4O1xuQHRvcC1yc3MtaGVpZ2h0OiAxN3B4O1xuQHRvcC1yc3MtdG90YWwtd2lkdGg6IDIxN3B4O1xuQHRvcC1yc3MtdG90YWwtaGVpZ2h0OiAxNzlweDtcbkB0b3AtcnNzLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHRvcC1yc3M6IDIwMHB4IDBweCAtMjAwcHggMHB4IDE3cHggMTdweCAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnICd0b3AtcnNzJztcbkB0b3AtdHdpdHRlci1uYW1lOiAndG9wLXR3aXR0ZXInO1xuQHRvcC10d2l0dGVyLXg6IDBweDtcbkB0b3AtdHdpdHRlci15OiAxNjRweDtcbkB0b3AtdHdpdHRlci1vZmZzZXQteDogMHB4O1xuQHRvcC10d2l0dGVyLW9mZnNldC15OiAtMTY0cHg7XG5AdG9wLXR3aXR0ZXItd2lkdGg6IDI2cHg7XG5AdG9wLXR3aXR0ZXItaGVpZ2h0OiAxNXB4O1xuQHRvcC10d2l0dGVyLXRvdGFsLXdpZHRoOiAyMTdweDtcbkB0b3AtdHdpdHRlci10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQHRvcC10d2l0dGVyLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHRvcC10d2l0dGVyOiAwcHggMTY0cHggMHB4IC0xNjRweCAyNnB4IDE1cHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAndG9wLXR3aXR0ZXInO1xuQHR1bWJsci1uYW1lOiAndHVtYmxyJztcbkB0dW1ibHIteDogMTIwcHg7XG5AdHVtYmxyLXk6IDEyM3B4O1xuQHR1bWJsci1vZmZzZXQteDogLTEyMHB4O1xuQHR1bWJsci1vZmZzZXQteTogLTEyM3B4O1xuQHR1bWJsci13aWR0aDogMzBweDtcbkB0dW1ibHItaGVpZ2h0OiAzMXB4O1xuQHR1bWJsci10b3RhbC13aWR0aDogMjE3cHg7XG5AdHVtYmxyLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AdHVtYmxyLWltYWdlOiAnLi4vaW1nL3Nwcml0ZS5wbmcnO1xuQHR1bWJscjogMTIwcHggMTIzcHggLTEyMHB4IC0xMjNweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAndHVtYmxyJztcbkB0d2l0dGVyLW5hbWU6ICd0d2l0dGVyJztcbkB0d2l0dGVyLXg6IDgwcHg7XG5AdHdpdHRlci15OiAxMjNweDtcbkB0d2l0dGVyLW9mZnNldC14OiAtODBweDtcbkB0d2l0dGVyLW9mZnNldC15OiAtMTIzcHg7XG5AdHdpdHRlci13aWR0aDogMzBweDtcbkB0d2l0dGVyLWhlaWdodDogMzFweDtcbkB0d2l0dGVyLXRvdGFsLXdpZHRoOiAyMTdweDtcbkB0d2l0dGVyLXRvdGFsLWhlaWdodDogMTc5cHg7XG5AdHdpdHRlci1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkB0d2l0dGVyOiA4MHB4IDEyM3B4IC04MHB4IC0xMjNweCAzMHB4IDMxcHggMjE3cHggMTc5cHggJy4uL2ltZy9zcHJpdGUucG5nJyAndHdpdHRlcic7XG5AdmltZW8tbmFtZTogJ3ZpbWVvJztcbkB2aW1lby14OiA0MHB4O1xuQHZpbWVvLXk6IDEyM3B4O1xuQHZpbWVvLW9mZnNldC14OiAtNDBweDtcbkB2aW1lby1vZmZzZXQteTogLTEyM3B4O1xuQHZpbWVvLXdpZHRoOiAzMHB4O1xuQHZpbWVvLWhlaWdodDogMzFweDtcbkB2aW1lby10b3RhbC13aWR0aDogMjE3cHg7XG5AdmltZW8tdG90YWwtaGVpZ2h0OiAxNzlweDtcbkB2aW1lby1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkB2aW1lbzogNDBweCAxMjNweCAtNDBweCAtMTIzcHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ3ZpbWVvJztcbkB6ZXJwbHktbmFtZTogJ3plcnBseSc7XG5AemVycGx5LXg6IDE2MHB4O1xuQHplcnBseS15OiAxMjNweDtcbkB6ZXJwbHktb2Zmc2V0LXg6IC0xNjBweDtcbkB6ZXJwbHktb2Zmc2V0LXk6IC0xMjNweDtcbkB6ZXJwbHktd2lkdGg6IDMwcHg7XG5AemVycGx5LWhlaWdodDogMzFweDtcbkB6ZXJwbHktdG90YWwtd2lkdGg6IDIxN3B4O1xuQHplcnBseS10b3RhbC1oZWlnaHQ6IDE3OXB4O1xuQHplcnBseS1pbWFnZTogJy4uL2ltZy9zcHJpdGUucG5nJztcbkB6ZXJwbHk6IDE2MHB4IDEyM3B4IC0xNjBweCAtMTIzcHggMzBweCAzMXB4IDIxN3B4IDE3OXB4ICcuLi9pbWcvc3ByaXRlLnBuZycgJ3plcnBseSc7XG5Ac3ByaXRlc2hlZXQtd2lkdGg6IDIxN3B4O1xuQHNwcml0ZXNoZWV0LWhlaWdodDogMTc5cHg7XG5Ac3ByaXRlc2hlZXQtaW1hZ2U6ICcuLi9pbWcvc3ByaXRlLnBuZyc7XG5Ac3ByaXRlc2hlZXQtc3ByaXRlczogQGJlaGFuY2UgQGJsb2dnZXIgQGRpZ2cgQGRyaWJiYmxlIEBlbWFpbCBAZXZlcm5vdGUgQGZhY2Vib29rIEBmbGlja3IgQGdvb2dsZSBAbGlua2VkaW4gQHBhdGggQHBpY2FzYSBAcmVkZGl0IEByc3MgQHNreXBlIEBzdHVtYmxlLXVwb24gQHRvcC1kcmliYmJsZSBAdG9wLWZhY2Vib29rIEB0b3AtcnNzIEB0b3AtdHdpdHRlciBAdHVtYmxyIEB0d2l0dGVyIEB2aW1lbyBAemVycGx5O1xuQHNwcml0ZXNoZWV0OiAyMTdweCAxNzlweCAnLi4vaW1nL3Nwcml0ZS5wbmcnIEBzcHJpdGVzaGVldC1zcHJpdGVzO1xuXG4vKlxuVGhlIHByb3ZpZGVkIGNsYXNzZXMgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aCB0aGUgYXJyYXktbGlrZSB2YXJpYWJsZXNcblxuLmljb24taG9tZSB7XG4gIC5zcHJpdGUtd2lkdGgoQGljb24taG9tZSk7XG59XG4uaWNvbi1lbWFpbCB7XG4gIC5zcHJpdGUoQGljb24tZW1haWwpO1xufVxuXG5FeGFtcGxlIHVzYWdlIGluIEhUTUw6XG5cbmBkaXNwbGF5OiBibG9ja2Agc3ByaXRlOlxuPGRpdiBjbGFzcz1cImljb24taG9tZVwiPjwvZGl2PlxuXG5UbyBjaGFuZ2UgYGRpc3BsYXlgIChlLmcuIGBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7YCksIHdlIHN1Z2dlc3QgdXNpbmcgYSBjb21tb24gQ1NTIGNsYXNzOlxuXG4vLyBDU1Ncbi5pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vLyBIVE1MXG48aSBjbGFzcz1cImljb24gaWNvbi1ob21lXCI+PC9pPlxuKi9cbi5zcHJpdGUtd2lkdGgoQHNwcml0ZSkge1xuICB3aWR0aDogZXh0cmFjdChAc3ByaXRlLCA1KTtcbn1cblxuLnNwcml0ZS1oZWlnaHQoQHNwcml0ZSkge1xuICBoZWlnaHQ6IGV4dHJhY3QoQHNwcml0ZSwgNik7XG59XG5cbi5zcHJpdGUtcG9zaXRpb24oQHNwcml0ZSkge1xuICBAc3ByaXRlLW9mZnNldC14OiBleHRyYWN0KEBzcHJpdGUsIDMpO1xuICBAc3ByaXRlLW9mZnNldC15OiBleHRyYWN0KEBzcHJpdGUsIDQpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBAc3ByaXRlLW9mZnNldC14IEBzcHJpdGUtb2Zmc2V0LXk7XG59XG5cbi5zcHJpdGUtaW1hZ2UoQHNwcml0ZSkge1xuICBAc3ByaXRlLWltYWdlOiBleHRyYWN0KEBzcHJpdGUsIDkpO1xuICBAc3ByaXRlLWltYWdlLWJhcmU6IH5gXCJAe3Nwcml0ZS1pbWFnZX1cIi5zbGljZSgxLCAtMSlgO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoQHNwcml0ZS1pbWFnZS1iYXJlKTtcbn1cblxuLnNwcml0ZShAc3ByaXRlKSB7XG4gIC5zcHJpdGUtaW1hZ2UoQHNwcml0ZSk7XG4gIC5zcHJpdGUtcG9zaXRpb24oQHNwcml0ZSk7XG4gIC5zcHJpdGUtd2lkdGgoQHNwcml0ZSk7XG4gIC5zcHJpdGUtaGVpZ2h0KEBzcHJpdGUpO1xufVxuXG4vKlxuVGhlIGAuc3ByaXRlc2AgbWl4aW4gZ2VuZXJhdGVzIGlkZW50aWNhbCBvdXRwdXQgdG8gdGhlIENTUyB0ZW1wbGF0ZVxuICBidXQgY2FuIGJlIG92ZXJyaWRkZW4gaW5zaWRlIG9mIExFU1NcblxuVGhpcyBtdXN0IGJlIHJ1biB3aGVuIHlvdSBoYXZlIGF0IGxlYXN0IDIgc3ByaXRlcy5cbiAgSWYgcnVuIHdpdGggYSBzaW5nbGUgc3ByaXRlLCB0aGVuIHRoZXJlIHdpbGwgYmUgcmVmZXJlbmNlIGVycm9ycy5cblxuLnNwcml0ZXMoQHNwcml0ZXNoZWV0LXNwcml0ZXMpO1xuKi9cbi5zcHJpdGVzKEBzcHJpdGVzLCBAaTogMSkgd2hlbiAoQGkgPD0gbGVuZ3RoKEBzcHJpdGVzKSkge1xuICBAc3ByaXRlOiBleHRyYWN0KEBzcHJpdGVzLCBAaSk7XG4gIEBzcHJpdGUtbmFtZTogZShleHRyYWN0KEBzcHJpdGUsIDEwKSk7XG4gIC5Ae3Nwcml0ZS1uYW1lfSB7XG4gICAgLnNwcml0ZShAc3ByaXRlKTtcbiAgfVxuICAuc3ByaXRlcyhAc3ByaXRlcywgQGkgKyAxKTtcbn1cbiIsIm1haW57XHJcblx0YmFja2dyb3VuZDogdXJsKC4uL2ltZy9iZy5wbmcpIHJlcGVhdDsgXHJcblx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMCk7XHJcblx0Ym9yZGVyLWJvdHRvbTogOHB4IHNvbGlkIEBhY3RpdmVDb2xvcjtcclxuXHRvdmVyZmxvdzogdmlzaWJsZTtcclxuXHQuY29udGVudHtcclxuXHRcdGJhY2tncm91bmQ6IHVybCguLi9pbWcvYmcucG5nKSByZXBlYXQ7XHJcblx0XHRtYXJnaW46IC0zMHB4IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdGZvbnQtc2l6ZTogQG90aGVyVGV4dDtcclxuXHRcdC5jb250ZW50LWhlYWRlcntcclxuXHRcdFx0YmFja2dyb3VuZDogdXJsKC4uL2ltZy9jb250ZW50LWJnLnBuZykgcmVwZWF0O1xyXG5cdFx0XHRjb2xvcjogI2ZmZjtcclxuXHRcdFx0Zm9udC1mYW1pbHk6IEBjb250ZW50TmFtZS1mZjtcclxuXHRcdFx0cGFkZGluZzogMzBweCAwIDM4cHggMzdweDtcclxuXHRcdFx0aDJ7XHJcblx0XHRcdFx0Zm9udC1zaXplOiBAY29udGVudE5hbWU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdC5jYXRlZ29yaWVze1xyXG5cdFx0XHRmb250LWZhbWlseTogQGNvbnRlbnQtZmY7XHJcblx0XHRcdHBhZGRpbmctbGVmdDogMjZweDtcclxuXHRcdFx0aGVpZ2h0OiA4NHB4O1xyXG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0XHQuc21fbWVudXtcclxuXHRcdFx0XHRkaXNwbGF5OiBub25lO1xyXG5cdFx0XHR9XHJcblx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3MHB4KSB7XHJcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHRcdGhlaWdodDogMnJlbTtcclxuXHRcdFx0XHQuc21fbWVudXtcclxuXHRcdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHRcdFx0bWFyZ2luOiAzcHggMDsgXHJcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdFx0XHRsZWZ0OiAwO1xyXG5cdFx0XHRcdFx0cmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRib3R0b206IDA7XHJcblx0XHRcdFx0XHRjb2xvcjogI2ZmZjtcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDVweCAxMHB4O1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogQGFjdGl2ZUNvbG9yO1xyXG5cdFx0XHRcdFx0LmJ1cmdlcntcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdFx0XHRcdGxlZnQ6IDA7XHJcblx0XHRcdFx0XHRcdHJpZ2h0OiAwO1xyXG5cdFx0XHRcdFx0XHRib3R0b206IDA7XHJcblx0XHRcdFx0XHRcdG1hcmdpbjogYXV0bztcclxuXHRcdFx0XHRcdFx0d2lkdGg6IDEwcHg7XHJcblx0XHRcdFx0XHRcdGhlaWdodDogMnB4O1xyXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cdFx0XHRcdFx0XHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdFx0XHRcdFx0XHQmOmJlZm9yZSwgJjphZnRlcntcclxuXHRcdFx0XHRcdFx0XHRjb250ZW50OiAnJztcclxuXHRcdFx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0XHRcdFx0XHR3aWR0aDogMTBweDtcclxuXHRcdFx0XHRcdFx0XHRoZWlnaHQ6IDJweDtcclxuXHRcdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cdFx0XHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0XHRcdFx0XHR0cmFuc2l0aW9uOiAuNHM7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0JjpiZWZvcmV7XHJcblx0XHRcdFx0XHRcdFx0dG9wOiAtM3B4O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdCY6YWZ0ZXJ7XHJcblx0XHRcdFx0XHRcdFx0dG9wOiAzcHg7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0Ji5vcGVue1xyXG5cdFx0XHRcdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdFx0XHRcdCY6YmVmb3Jle1xyXG5cdFx0XHRcdFx0XHRcdFx0dG9wOiAwO1xyXG5cdFx0XHRcdFx0XHRcdFx0dHJhbnNmb3JtOiByb3RhdGVaKDQ1ZGVnKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0JjphZnRlcntcclxuXHRcdFx0XHRcdFx0XHRcdHRvcDogMDtcclxuXHRcdFx0XHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlWigtNDVkZWcpO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR1bHtcclxuXHRcdFx0XHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzBweCkge1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwgLjUpO1xyXG5cdFx0XHRcdFx0ei1pbmRleDogMjtcclxuXHRcdFx0XHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0XHRcdFx0XHRoZWlnaHQ6IDE4MHB4O1xyXG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0XHR0b3A6IDMycHg7XHJcblx0XHRcdFx0XHRsZWZ0OiAwO1xyXG5cdFx0XHRcdFx0cmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRib3R0b206IDA7XHJcblx0XHRcdFx0XHRwYWRkaW5nLXRvcDogMTBweDtcclxuXHRcdFx0XHRcdGxpe1xyXG5cdFx0XHRcdFx0XHRtYXJnaW46IDE1cHggMTBweDtcclxuXHRcdFx0XHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0XHRcdFx0XHRhe1xyXG5cdFx0XHRcdFx0XHRcdGNvbG9yOiAjZmZmO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC5jb2wtNSgpO1xyXG5cdFx0XHRcdC5jb2wtbWQtNygpO1xyXG5cdFx0XHRcdC5jb2wtc20tMTIoKTtcclxuXHRcdFx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0XHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdFx0XHRmbGV4LXNocmluazogMDtcclxuXHRcdFx0XHRhOmhvdmVye1xyXG5cdFx0XHRcdFx0Y29sb3I6IEBhY3RpdmVDb2xvcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0LmFjdGl2ZS1jYXR7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogQGFjdGl2ZUNvbG9yO1xyXG5cdFx0XHRcdGNvbG9yOiAjZmZmO1xyXG5cdFx0XHRcdHBhZGRpbmc6IDEwcHggMTBweDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0LmdhbGVyeXtcclxuXHRcdFx0LmZsZXgtd3JhcCh3cmFwKTtcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdFx0XHRwYWRkaW5nOiAwIDI2cHg7XHJcblx0XHRcdC5jb2wtc20tMTIoKTtcclxuXHRcdFx0Lml0ZW17XHJcblx0XHRcdFx0ZmxleC1zaHJpbms6IDA7XHJcblx0XHRcdFx0bWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHRcdFx0XHQuY29sLTMoKTtcclxuXHRcdFx0XHQuY29sLW1kLTQoKTtcclxuXHRcdFx0XHQuY29sLXNtLTYoKTtcclxuXHRcdFx0XHQuanVzdGlmeS1jb250ZW50LXNtKGNlbnRlcik7XHJcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHRcdC5ob2xkZXJ7XHJcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdFx0XHRoZWlnaHQ6IDMwcHg7XHJcblx0XHRcdFx0XHRsZWZ0OiAwO1xyXG5cdFx0XHRcdFx0dG9wOiAxMDFweDtcclxuXHRcdFx0XHRcdHJpZ2h0OiAwO1xyXG5cdFx0XHRcdFx0Ym90dG9tOiAwO1xyXG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuNzUpO1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogbm9uZTtcclxuXHRcdFx0XHRcdGNvbG9yOiAjZmZmO1xyXG5cdFx0XHRcdFx0Zm9udC1mYW1pbHk6IEBjb250ZW50TmFtZS1mZjtcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDVweCAxMHB4O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQmOmhvdmVyIC5ob2xkZXJ7XHJcblx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aW1ne1xyXG5cdFx0XHRcdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59IiwiLmZvb3Rlci1iZ3tcclxuXHRiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2NvbnRlbnQtYmcucG5nKSByZXBlYXQ7XHJcblx0Y29sb3I6ICNhNWE1YTU7XHJcblx0Zm9udC1mYW1pbHk6IEBmb290ZXItZmY7XHJcblx0Zm9udC1zaXplOiBAb3RoZXJUZXh0O1xyXG5cdHBhZGRpbmc6IDY4cHggMCA0NXB4IDA7XHJcblx0Lm5hbWV7XHJcblx0XHRjb2xvcjogI2ZmZjtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0fVxyXG5cdC53cmFwcGVye1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdGZsZXgtd3JhcDogd3JhcDtcclxuXHR9XHJcblx0LnJlY2VudCwgLmFib3V0LCAuc29jaWFse1xyXG5cdFx0LmNvbC00KCk7XHJcblx0XHQuY29sLW1kLTYoKTtcclxuXHRcdC5jb2wtc20tMTIoKTtcclxuXHRcdHB7XHJcblx0XHRcdG1hcmdpbi1ib3R0b206IDIycHg7XHJcblx0XHR9XHJcblx0XHQmLWl0ZW17XHJcblx0XHRcdHBhZGRpbmc6IDEycHggMCAyMHB4IDA7XHJcblx0XHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjM2IzYjNiO1xyXG5cdFx0XHQmOmxhc3QtY2hpbGR7XHJcblx0XHRcdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cdC5yZWNlbnR7XHJcblx0XHRwK2RpdntcclxuXHRcdFx0cGFkZGluZy10b3A6IDA7XHJcblx0XHR9XHJcblx0fVxyXG5cdC5zb2NpYWx7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGF7XHJcblx0XHRcdHNwYW57XHJcblx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdFx0XHR9XHJcblx0XHRtYXJnaW46IDFweDtcclxuXHRcdH1cclxuXHRcdC5yc3N7XHJcblx0XHRcdC5zcHJpdGUoQHJzcyk7XHJcblx0XHR9XHJcblx0XHQuZmFjZWJvb2t7XHJcblx0XHRcdC5zcHJpdGUoQGZhY2Vib29rKTtcclxuXHRcdH1cclxuXHRcdC50d2l0dGVye1xyXG5cdFx0XHQuc3ByaXRlKEB0d2l0dGVyKTtcclxuXHRcdH1cclxuXHRcdC5lbWFpbHtcclxuXHRcdFx0LnNwcml0ZShAZW1haWwpO1xyXG5cdFx0fVxyXG5cdFx0LnR1bWJscntcclxuXHRcdFx0LnNwcml0ZShAdHVtYmxyKTtcclxuXHRcdH1cclxuXHRcdC5wYXRoe1xyXG5cdFx0XHQuc3ByaXRlKEBwYXRoKTtcclxuXHRcdH1cclxuXHRcdC52aW1lb3tcclxuXHRcdFx0LnNwcml0ZShAdmltZW8pO1xyXG5cdFx0fVxyXG5cdFx0LnplcnBseXtcclxuXHRcdFx0LnNwcml0ZShAemVycGx5KTtcclxuXHRcdH1cclxuXHRcdC5waWNhc2F7XHJcblx0XHRcdC5zcHJpdGUoQHBpY2FzYSk7XHJcblx0XHR9XHJcblx0XHQuc3R1bWJsZS11cG9ue1xyXG5cdFx0XHQuc3ByaXRlKEBzdHVtYmxlLXVwb24pO1xyXG5cdFx0fVxyXG5cdFx0LnNreXBle1xyXG5cdFx0XHQuc3ByaXRlKEBza3lwZSk7XHJcblx0XHR9XHJcblx0XHQucmVkZGl0e1xyXG5cdFx0XHQuc3ByaXRlKEByZWRkaXQpO1xyXG5cdFx0fVxyXG5cdFx0LmV2ZXJub3Rle1xyXG5cdFx0XHQuc3ByaXRlKEBldmVybm90ZSk7XHJcblx0XHR9XHJcblx0XHQuYmVoYW5jZXtcclxuXHRcdFx0LnNwcml0ZShAYmVoYW5jZSk7XHJcblx0XHR9XHJcblx0XHQuZHJpYmJibGV7XHJcblx0XHRcdC5zcHJpdGUoQGRyaWJiYmxlKTtcclxuXHRcdH1cclxuXHRcdC5kaWdne1xyXG5cdFx0XHQuc3ByaXRlKEBkaWdnKTtcclxuXHRcdH1cclxuXHRcdC5ibG9nZ2Vye1xyXG5cdFx0XHQuc3ByaXRlKEBibG9nZ2VyKTtcclxuXHRcdH1cclxuXHRcdC5mbGlja3J7XHJcblx0XHRcdC5zcHJpdGUoQGZsaWNrcik7XHJcblx0XHR9XHJcblx0XHQubGlua2VkaW57XHJcblx0XHRcdC5zcHJpdGUoQGxpbmtlZGluKTtcclxuXHRcdH1cclxuXHRcdC5nb29nbGV7XHJcblx0XHRcdC5zcHJpdGUoQGdvb2dsZSk7XHJcblx0XHR9XHJcblx0XHRcclxuXHR9XHJcbn0iXX0= */
