body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

@font-face {
  font-family: 'Bitter-B';
  src: url('../fonts/Bitter-Bold.ttf');
}

@font-face {
  font-family: 'Bitter-R';
  src: url('../fonts/Bitter-Regular.ttf');
}

@font-face {
  font-family: 'HelvetNuel-B';
  src: url('../fonts/HelveticaNeue-Bold.ttf');
}

@font-face {
  font-family: 'HelvetNuel-M';
  src: url('../fonts/HelveticaNeue-Medium.ttf');
}

/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/

* {
  box-sizing: border-box;
}

.wrapper {
  max-width: 960px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 0 auto;
}

a {
  color: #000;
  text-decoration: none;
}

.active {
  color: #ea5a4b;
}

.header-top {
  height: 47px;
  background: url(../img/content-bg.png) repeat-x top left;
}

.header-top .top-social {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.header-top .top-social a {
  margin: 15px 9px;
}

.header-top .top-social a:last-child {
  margin-right: 0px;
}

.header-top .top-social a span {
  display: block;
}

.header-top .top-social .twitter {
  background-image: url(../img/sprite.png);
  background-position: 0px -164px;
  width: 26px;
  height: 15px;
}

.header-top .top-social .facebook {
  background-image: url(../img/sprite.png);
  background-position: -200px -53px;
  width: 8px;
  height: 16px;
}

.header-top .top-social .dribbble {
  background-image: url(../img/sprite.png);
  background-position: -200px -27px;
  width: 16px;
  height: 16px;
}

.header-top .top-social .rss {
  background-image: url(../img/sprite.png);
  background-position: -200px 0px;
  width: 17px;
  height: 17px;
}

.header-menu {
  height: 56px;
  background: url(../img/bg.png) repeat top left;
  position: relative;
  box-shadow: 0 5px 8px rgba(0, 0, 0, 0.75);
}

.header-menu .wrapper {
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -ms-flex-align: center;
  align-items: center;
}

.header-menu .logo {
  padding-top: 2px;
  width: calc(16.666666666666668% - 10px);
}

.header-menu nav {
  width: calc(33.333333333333336% - 10px);
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.header-menu nav ul {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-transform: uppercase;
  font-family: 'HelvetNuel-M';
  font-size: 0.75rem;
  font-weight: 600;
  padding-top: 2px;
  letter-spacing: .4px;
  width: calc(33.333333333333336% - 10px);
  margin-left: calc(66.66666666666667% + 5px);
}

.header-menu nav ul li:last-child > a {
  margin-right: 1px;
}

.header-menu nav ul a {
  margin: 20px 13px;
}

.header-menu nav ul a:hover {
  color: #ea5a4b;
}

.header-bg {
  height: 151px;
  background: url(../img/header-bg.png) no-repeat top center;
  background-size: 100%;
}

.content-bg {
  background: url(../img/bg.png) repeat;
  border-top: 1px solid rgba(0, 0, 0, 0);
  border-bottom: 8px solid #ea5a4b;
  overflow: visible;
}

.content-bg .content {
  background: url(../img/bg.png) repeat;
  margin: -30px 0;
  width: 100%;
  position: relative;
  font-size: 0.875rem;
}

.content-bg .content .content-header {
  background: url(../img/content-bg.png) repeat;
  color: #fff;
  font-family: 'Bitter-B';
  padding: 30px 0 38px 37px;
}

.content-bg .content .content-header h2 {
  font-size: 1.875rem;
}

.content-bg .content .categories {
  font-family: 'Bitter-R';
  padding-left: 26px;
  height: 84px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
}

.content-bg .content .categories ul {
  width: calc(41.66666666666667% - 10px);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.content-bg .content .categories .active-cat {
  background-color: #ea5a4b;
  color: #fff;
  padding: 10px 10px;
}

.content-bg .content .galery {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 26px;
}

.content-bg .content .galery .item {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-bottom: 15px;
  width: calc(25% - 10px);
  position: relative;
}

.content-bg .content .galery .item .holder {
  position: absolute;
  height: 30px;
  left: 0;
  top: 101px;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  display: none;
  color: #fff;
  font-family: 'Bitter-B';
  padding: 5px 10px;
}

.content-bg .content .galery .item:hover .holder {
  display: block;
}

.content-bg .content .galery .item img {
  height: 100%;
  width: 100%;
}

.footer-bg {
  background: url(../img/content-bg.png) repeat;
  color: #a5a5a5;
  font-family: 'HelvetNuel-B';
  font-size: 0.875rem;
  padding: 68px 0 45px 0;
}

.footer-bg .name {
  color: #fff;
  text-transform: uppercase;
}

.footer-bg .wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.footer-bg .recent,
.footer-bg .about,
.footer-bg .social {
  width: calc(33.333333333333336% - 10px);
}

.footer-bg .recent p,
.footer-bg .about p,
.footer-bg .social p {
  margin-bottom: 22px;
}

.footer-bg .recent-item,
.footer-bg .about-item,
.footer-bg .social-item {
  padding: 12px 0 20px 0;
  border-bottom: 1px solid #3b3b3b;
}

.footer-bg .recent-item:last-child,
.footer-bg .about-item:last-child,
.footer-bg .social-item:last-child {
  border: none;
}

.footer-bg .recent p + div {
  padding-top: 0;
}

.footer-bg .social {
  display: block;
}

.footer-bg .social a {
  margin: 1px;
}

.footer-bg .social a span {
  display: inline-block;
}

.footer-bg .social .rss {
  background-image: url(../img/sprite.png);
  background-position: -160px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .facebook {
  background-image: url(../img/sprite.png);
  background-position: -120px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .twitter {
  background-image: url(../img/sprite.png);
  background-position: -80px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .email {
  background-image: url(../img/sprite.png);
  background-position: -40px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .tumblr {
  background-image: url(../img/sprite.png);
  background-position: -120px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .path {
  background-image: url(../img/sprite.png);
  background-position: -80px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .vimeo {
  background-image: url(../img/sprite.png);
  background-position: -40px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .zerply {
  background-image: url(../img/sprite.png);
  background-position: -160px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .picasa {
  background-image: url(../img/sprite.png);
  background-position: -120px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .stumble-upon {
  background-image: url(../img/sprite.png);
  background-position: 0px -123px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .skype {
  background-image: url(../img/sprite.png);
  background-position: -160px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .reddit {
  background-image: url(../img/sprite.png);
  background-position: 0px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .evernote {
  background-image: url(../img/sprite.png);
  background-position: -80px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .behance {
  background-image: url(../img/sprite.png);
  background-position: -40px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .dribbble {
  background-image: url(../img/sprite.png);
  background-position: 0px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .digg {
  background-image: url(../img/sprite.png);
  background-position: -80px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .blogger {
  background-image: url(../img/sprite.png);
  background-position: -160px 0px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .flickr {
  background-image: url(../img/sprite.png);
  background-position: -120px -41px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .linkedin {
  background-image: url(../img/sprite.png);
  background-position: -40px -82px;
  width: 30px;
  height: 31px;
}

.footer-bg .social .google {
  background-image: url(../img/sprite.png);
  background-position: 0px -82px;
  width: 30px;
  height: 31px;
}

@media screen and (max-width: 960px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media screen and (max-width: 780px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }

  .header-menu nav {
    width: calc(33.333333333333336% - 10px);
  }

  .content-bg .content .categories ul {
    width: calc(58.333333333333336% - 10px);
  }

  .content-bg .content .galery .item {
    width: calc(33.333333333333336% - 10px);
  }

  .footer-bg .recent,
  .footer-bg .about,
  .footer-bg .social {
    width: calc(50% - 10px);
  }
}

@media screen and (max-width: 560px) {
  .wrapper {
    padding-left: 10px;
    padding-right: 10px;
  }

  .header-menu nav {
    width: calc(33.333333333333336% - 10px);
  }

  .header-menu nav ul {
    width: calc(75% - 10px);
  }

  .header-menu nav ul {
    margin-left: calc(25% + 5px);
  }

  .content-bg .content .categories ul {
    width: calc(100% - 10px);
  }

  .content-bg .content .galery {
    width: calc(100% - 10px);
  }

  .content-bg .content .galery .item {
    width: calc(50% - 10px);
  }

  .content-bg .content .galery .item {
    -ms-flex-pack: center;
    justify-content: center;
  }

  .footer-bg .recent,
  .footer-bg .about,
  .footer-bg .social {
    width: calc(100% - 10px);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
